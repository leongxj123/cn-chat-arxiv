<rss version="2.0"><channel><title>Chat Arxiv cs.MS</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.MS</description><item><title>&#26412;&#25991;&#30740;&#31350;&#20102;&#22810;&#32423;&#20302;&#31209;&#30697;&#38453;&#20013;&#30340;&#22240;&#23376;&#25311;&#21512;&#12289;&#31209;&#20998;&#37197;&#21644;&#20998;&#21106;&#38382;&#39064;&#65292;&#25552;&#20986;&#20102;&#30456;&#24212;&#30340;&#35299;&#20915;&#26041;&#27861;&#65292;&#24182;&#24320;&#21457;&#20102;&#19968;&#20010;&#24320;&#28304;&#36719;&#20214;&#21253;&#12290;</title><link>http://arxiv.org/abs/2310.19214</link><description>&lt;p&gt;
&#22312;&#22810;&#32423;&#20302;&#31209;&#30697;&#38453;&#20013;&#36827;&#34892;&#22240;&#23376;&#25311;&#21512;&#12289;&#31209;&#20998;&#37197;&#21644;&#20998;&#21106;
&lt;/p&gt;
&lt;p&gt;
Factor Fitting, Rank Allocation, and Partitioning in Multilevel Low Rank Matrices. (arXiv:2310.19214v1 [stat.ML])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2310.19214
&lt;/p&gt;
&lt;p&gt;
&#26412;&#25991;&#30740;&#31350;&#20102;&#22810;&#32423;&#20302;&#31209;&#30697;&#38453;&#20013;&#30340;&#22240;&#23376;&#25311;&#21512;&#12289;&#31209;&#20998;&#37197;&#21644;&#20998;&#21106;&#38382;&#39064;&#65292;&#25552;&#20986;&#20102;&#30456;&#24212;&#30340;&#35299;&#20915;&#26041;&#27861;&#65292;&#24182;&#24320;&#21457;&#20102;&#19968;&#20010;&#24320;&#28304;&#36719;&#20214;&#21253;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#25105;&#20204;&#32771;&#34385;&#22810;&#32423;&#20302;&#31209;&#65288;MLR&#65289;&#30697;&#38453;&#65292;&#23450;&#20041;&#20026;&#19968;&#31995;&#21015;&#30697;&#38453;&#30340;&#34892;&#21644;&#21015;&#30340;&#25490;&#21015;&#65292;&#27599;&#20010;&#30697;&#38453;&#37117;&#26159;&#21069;&#19968;&#20010;&#30697;&#38453;&#30340;&#22359;&#23545;&#35282;&#20462;&#27491;&#65292;&#25152;&#26377;&#22359;&#20197;&#22240;&#23376;&#24418;&#24335;&#32473;&#20986;&#20302;&#31209;&#30697;&#38453;&#12290;MLR&#30697;&#38453;&#25193;&#23637;&#20102;&#20302;&#31209;&#30697;&#38453;&#30340;&#27010;&#24565;&#65292;&#20294;&#23427;&#20204;&#20849;&#20139;&#35768;&#22810;&#29305;&#24615;&#65292;&#20363;&#22914;&#25152;&#38656;&#24635;&#23384;&#20648;&#31354;&#38388;&#21644;&#30697;&#38453;&#21521;&#37327;&#20056;&#27861;&#30340;&#22797;&#26434;&#24230;&#12290;&#25105;&#20204;&#35299;&#20915;&#20102;&#29992;Frobenius&#33539;&#25968;&#25311;&#21512;&#32473;&#23450;&#30697;&#38453;&#21040;MLR&#30697;&#38453;&#30340;&#19977;&#20010;&#38382;&#39064;&#12290;&#31532;&#19968;&#20010;&#38382;&#39064;&#26159;&#22240;&#23376;&#25311;&#21512;&#65292;&#36890;&#36807;&#35843;&#25972;MLR&#30697;&#38453;&#30340;&#22240;&#23376;&#26469;&#35299;&#20915;&#12290;&#31532;&#20108;&#20010;&#38382;&#39064;&#26159;&#31209;&#20998;&#37197;&#65292;&#22312;&#27599;&#20010;&#32423;&#21035;&#20013;&#36873;&#25321;&#22359;&#30340;&#31209;&#65292;&#28385;&#36275;&#24635;&#31209;&#30340;&#32473;&#23450;&#20540;&#65292;&#20197;&#20445;&#25345;MLR&#30697;&#38453;&#25152;&#38656;&#30340;&#24635;&#23384;&#20648;&#31354;&#38388;&#12290;&#26368;&#21518;&#19968;&#20010;&#38382;&#39064;&#26159;&#36873;&#25321;&#34892;&#21644;&#21015;&#30340;&#23618;&#27425;&#20998;&#21106;&#65292;&#20197;&#21450;&#31209;&#21644;&#22240;&#23376;&#12290;&#26412;&#25991;&#38468;&#24102;&#20102;&#19968;&#20010;&#24320;&#28304;&#36719;&#20214;&#21253;&#65292;&#23454;&#29616;&#20102;&#25152;&#25552;&#20986;&#30340;&#26041;&#27861;&#12290;
&lt;/p&gt;
&lt;p&gt;
We consider multilevel low rank (MLR) matrices, defined as a row and column permutation of a sum of matrices, each one a block diagonal refinement of the previous one, with all blocks low rank given in factored form. MLR matrices extend low rank matrices but share many of their properties, such as the total storage required and complexity of matrix-vector multiplication. We address three problems that arise in fitting a given matrix by an MLR matrix in the Frobenius norm. The first problem is factor fitting, where we adjust the factors of the MLR matrix. The second is rank allocation, where we choose the ranks of the blocks in each level, subject to the total rank having a given value, which preserves the total storage needed for the MLR matrix. The final problem is to choose the hierarchical partition of rows and columns, along with the ranks and factors. This paper is accompanied by an open source package that implements the proposed methods.
&lt;/p&gt;</description></item></channel></rss>