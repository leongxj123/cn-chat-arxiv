<rss version="2.0"><channel><title>Chat Arxiv cs.NA</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.NA</description><item><title>&#26412;&#25991;&#25552;&#20986;&#20102;&#19968;&#20010;&#26032;&#30340;&#20248;&#21270;&#26694;&#26550;&#65292;&#20351;&#29992;&#23884;&#22871;&#30340;&#20302;&#31209;&#36817;&#20284;&#26041;&#27861;&#36890;&#36807;&#31070;&#32463;&#32593;&#32476;&#23454;&#29616;&#36816;&#31639;&#31526;&#30340;&#22855;&#24322;&#20540;&#20998;&#35299;&#12290;&#35813;&#26041;&#27861;&#36890;&#36807;&#26080;&#32422;&#26463;&#20248;&#21270;&#20844;&#24335;&#38544;&#24335;&#39640;&#25928;&#22320;&#20445;&#25345;&#23398;&#20064;&#20989;&#25968;&#30340;&#27491;&#20132;&#24615;&#12290;</title><link>https://arxiv.org/abs/2402.03655</link><description>&lt;p&gt;
&#20351;&#29992;&#31070;&#32463;&#32593;&#32476;&#36890;&#36807;&#23884;&#22871;&#20302;&#31209;&#36817;&#20284;&#23454;&#29616;&#36816;&#31639;&#31526;&#30340;&#22855;&#24322;&#20540;&#20998;&#35299;
&lt;/p&gt;
&lt;p&gt;
Operator SVD with Neural Networks via Nested Low-Rank Approximation
&lt;/p&gt;
&lt;p&gt;
https://arxiv.org/abs/2402.03655
&lt;/p&gt;
&lt;p&gt;
&#26412;&#25991;&#25552;&#20986;&#20102;&#19968;&#20010;&#26032;&#30340;&#20248;&#21270;&#26694;&#26550;&#65292;&#20351;&#29992;&#23884;&#22871;&#30340;&#20302;&#31209;&#36817;&#20284;&#26041;&#27861;&#36890;&#36807;&#31070;&#32463;&#32593;&#32476;&#23454;&#29616;&#36816;&#31639;&#31526;&#30340;&#22855;&#24322;&#20540;&#20998;&#35299;&#12290;&#35813;&#26041;&#27861;&#36890;&#36807;&#26080;&#32422;&#26463;&#20248;&#21270;&#20844;&#24335;&#38544;&#24335;&#39640;&#25928;&#22320;&#20445;&#25345;&#23398;&#20064;&#20989;&#25968;&#30340;&#27491;&#20132;&#24615;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#22312;&#35768;&#22810;&#26426;&#22120;&#23398;&#20064;&#21644;&#31185;&#23398;&#35745;&#31639;&#38382;&#39064;&#20013;&#65292;&#35745;&#31639;&#32473;&#23450;&#32447;&#24615;&#31639;&#23376;&#30340;&#29305;&#24449;&#20540;&#20998;&#35299;&#65288;EVD&#65289;&#25110;&#25214;&#21040;&#20854;&#20027;&#35201;&#29305;&#24449;&#20540;&#21644;&#29305;&#24449;&#20989;&#25968;&#26159;&#19968;&#39033;&#22522;&#30784;&#20219;&#21153;&#12290;&#23545;&#20110;&#39640;&#32500;&#29305;&#24449;&#20540;&#38382;&#39064;&#65292;&#35757;&#32451;&#31070;&#32463;&#32593;&#32476;&#21442;&#25968;&#21270;&#29305;&#24449;&#20989;&#25968;&#34987;&#35748;&#20026;&#26159;&#20256;&#32479;&#25968;&#20540;&#32447;&#24615;&#20195;&#25968;&#25216;&#26415;&#30340;&#26377;&#24076;&#26395;&#30340;&#26367;&#20195;&#26041;&#27861;&#12290;&#26412;&#25991;&#25552;&#20986;&#20102;&#19968;&#20010;&#26032;&#30340;&#20248;&#21270;&#26694;&#26550;&#65292;&#22522;&#20110;&#25130;&#26029;&#22855;&#24322;&#20540;&#20998;&#35299;&#30340;&#20302;&#31209;&#36817;&#20284;&#34920;&#24449;&#65292;&#24182;&#20276;&#38543;&#30528;&#31216;&#20026;&#23884;&#22871;&#30340;&#23398;&#20064;&#26041;&#27861;&#65292;&#20197;&#27491;&#30830;&#30340;&#39034;&#24207;&#23398;&#20064;&#21069;L&#20010;&#22855;&#24322;&#20540;&#21644;&#22855;&#24322;&#20989;&#25968;&#12290;&#25152;&#25552;&#20986;&#30340;&#26041;&#27861;&#36890;&#36807;&#26080;&#32422;&#26463;&#20248;&#21270;&#20844;&#24335;&#38544;&#24335;&#39640;&#25928;&#22320;&#20419;&#36827;&#20102;&#23398;&#20064;&#20989;&#25968;&#30340;&#27491;&#20132;&#24615;&#65292;&#36825;&#20010;&#20844;&#24335;&#21487;&#20197;&#24456;&#23481;&#26131;&#22320;&#36890;&#36807;&#29616;&#25104;&#30340;&#22522;&#20110;&#26799;&#24230;&#30340;&#20248;&#21270;&#31639;&#27861;&#27714;&#35299;&#12290;&#25105;&#20204;&#23637;&#31034;&#20102;&#25152;&#25552;&#20986;&#30340;&#20248;&#21270;&#26694;&#26550;&#22312;&#20351;&#29992;&#26696;&#20363;&#20013;&#30340;&#26377;&#25928;&#24615;&#12290;
&lt;/p&gt;
&lt;p&gt;
Computing eigenvalue decomposition (EVD) of a given linear operator, or finding its leading eigenvalues and eigenfunctions, is a fundamental task in many machine learning and scientific computing problems. For high-dimensional eigenvalue problems, training neural networks to parameterize the eigenfunctions is considered as a promising alternative to the classical numerical linear algebra techniques. This paper proposes a new optimization framework based on the low-rank approximation characterization of a truncated singular value decomposition, accompanied by new techniques called nesting for learning the top-$L$ singular values and singular functions in the correct order. The proposed method promotes the desired orthogonality in the learned functions implicitly and efficiently via an unconstrained optimization formulation, which is easy to solve with off-the-shelf gradient-based optimization algorithms. We demonstrate the effectiveness of the proposed optimization framework for use cas
&lt;/p&gt;</description></item></channel></rss>