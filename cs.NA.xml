<rss version="2.0"><channel><title>Chat Arxiv cs.NA</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.NA</description><item><title>&#24341;&#20837;&#20102;&#19968;&#31181;&#40065;&#26834;&#30340;&#29289;&#29702;&#20449;&#24687;&#31070;&#32463;&#32593;&#32476;&#65288;RPINNs&#65289;&#26469;&#36817;&#20284;&#20559;&#24494;&#20998;&#26041;&#31243;&#65288;PDE&#65289;&#30340;&#35299;&#65292;&#35813;&#32593;&#32476;&#22312;&#35757;&#32451;&#36807;&#31243;&#20013;&#32771;&#34385;&#20102;PDE&#30340;&#25511;&#21046;&#29289;&#29702;&#27861;&#21017;&#65292;&#35299;&#20915;&#20102;&#20256;&#32479;PINNs&#20013;&#25439;&#22833;&#20989;&#25968;&#19982;&#30495;&#23454;&#35823;&#24046;&#19981;&#40065;&#26834;&#30340;&#38382;&#39064;&#12290;</title><link>http://arxiv.org/abs/2401.02300</link><description>&lt;p&gt;
&#40065;&#26834;&#30340;&#29289;&#29702;&#20449;&#24687;&#31070;&#32463;&#32593;&#32476;
&lt;/p&gt;
&lt;p&gt;
Robust Physics Informed Neural Networks. (arXiv:2401.02300v1 [cs.LG])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2401.02300
&lt;/p&gt;
&lt;p&gt;
&#24341;&#20837;&#20102;&#19968;&#31181;&#40065;&#26834;&#30340;&#29289;&#29702;&#20449;&#24687;&#31070;&#32463;&#32593;&#32476;&#65288;RPINNs&#65289;&#26469;&#36817;&#20284;&#20559;&#24494;&#20998;&#26041;&#31243;&#65288;PDE&#65289;&#30340;&#35299;&#65292;&#35813;&#32593;&#32476;&#22312;&#35757;&#32451;&#36807;&#31243;&#20013;&#32771;&#34385;&#20102;PDE&#30340;&#25511;&#21046;&#29289;&#29702;&#27861;&#21017;&#65292;&#35299;&#20915;&#20102;&#20256;&#32479;PINNs&#20013;&#25439;&#22833;&#20989;&#25968;&#19982;&#30495;&#23454;&#35823;&#24046;&#19981;&#40065;&#26834;&#30340;&#38382;&#39064;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#25105;&#20204;&#24341;&#20837;&#20102;&#19968;&#31181;&#40065;&#26834;&#29256;&#26412;&#30340;&#29289;&#29702;&#20449;&#24687;&#31070;&#32463;&#32593;&#32476;&#65288;RPINNs&#65289;&#26469;&#36817;&#20284;&#20559;&#24494;&#20998;&#26041;&#31243;&#65288;PDE&#65289;&#30340;&#35299;&#12290;&#26631;&#20934;&#30340;&#29289;&#29702;&#20449;&#24687;&#31070;&#32463;&#32593;&#32476;&#65288;PINN&#65289;&#22312;&#23398;&#20064;&#36807;&#31243;&#20013;&#32771;&#34385;&#20102;&#30001;PDE&#25551;&#36848;&#30340;&#25511;&#21046;&#29289;&#29702;&#27861;&#21017;&#12290;&#35813;&#32593;&#32476;&#22312;&#30001;&#29289;&#29702;&#22495;&#21644;&#36793;&#30028;&#38543;&#26426;&#36873;&#25321;&#30340;&#25968;&#25454;&#38598;&#19978;&#36827;&#34892;&#35757;&#32451;&#12290;PINNs&#24050;&#25104;&#21151;&#24212;&#29992;&#20110;&#35299;&#20915;&#30001;PDE&#21644;&#36793;&#30028;&#26465;&#20214;&#25551;&#36848;&#30340;&#21508;&#31181;&#38382;&#39064;&#12290;&#20256;&#32479;PINNs&#20013;&#30340;&#25439;&#22833;&#20989;&#25968;&#22522;&#20110;PDE&#30340;&#24378;&#27531;&#24046;&#12290;&#36825;&#31181;PINNs&#20013;&#30340;&#25439;&#22833;&#20989;&#25968;&#36890;&#24120;&#23545;&#30495;&#23454;&#35823;&#24046;&#19981;&#20855;&#26377;&#40065;&#26834;&#24615;&#12290;PINNs&#20013;&#30340;&#25439;&#22833;&#20989;&#25968;&#19982;&#30495;&#23454;&#35823;&#24046;&#21487;&#33021;&#30456;&#24046;&#24456;&#22823;&#65292;&#36825;&#20351;&#24471;&#35757;&#32451;&#36807;&#31243;&#26356;&#21152;&#22256;&#38590;&#12290;&#29305;&#21035;&#26159;&#65292;&#22914;&#26524;&#25105;&#20204;&#19981;&#30693;&#36947;&#31934;&#30830;&#35299;&#65292;&#25105;&#20204;&#23601;&#19981;&#33021;&#20272;&#35745;&#35757;&#32451;&#36807;&#31243;&#26159;&#21542;&#24050;&#32463;&#20197;&#25152;&#38656;&#30340;&#31934;&#24230;&#25910;&#25947;&#21040;&#35299;&#12290;&#36825;&#22312;&#25105;&#20204;&#19981;&#30693;&#36947;&#31934;&#30830;&#35299;&#26102;&#23588;&#20854;&#27491;&#30830;&#65292;
&lt;/p&gt;
&lt;p&gt;
We introduce a Robust version of the Physics-Informed Neural Networks (RPINNs) to approximate the Partial Differential Equations (PDEs) solution. Standard Physics Informed Neural Networks (PINN) takes into account the governing physical laws described by PDE during the learning process. The network is trained on a data set that consists of randomly selected points in the physical domain and its boundary. PINNs have been successfully applied to solve various problems described by PDEs with boundary conditions. The loss function in traditional PINNs is based on the strong residuals of the PDEs. This loss function in PINNs is generally not robust with respect to the true error. The loss function in PINNs can be far from the true error, which makes the training process more difficult. In particular, we do not know if the training process has already converged to the solution with the required accuracy. This is especially true if we do not know the exact solution, so we cannot estimate the 
&lt;/p&gt;</description></item></channel></rss>