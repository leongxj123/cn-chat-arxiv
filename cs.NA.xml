<rss version="2.0"><channel><title>Chat Arxiv cs.NA</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.NA</description><item><title>&#26412;&#35770;&#25991;&#25552;&#20986;&#20102;&#19968;&#31181;&#19981;&#38656;&#35201;&#25506;&#27979;&#20276;&#38543;&#31639;&#23376;&#30340;&#31639;&#23376;&#23398;&#20064;&#26041;&#27861;&#65292;&#36890;&#36807;&#22312;Fourier&#22522;&#19978;&#36827;&#34892;&#25237;&#24433;&#26469;&#36924;&#36817;&#19968;&#31867;&#38750;&#33258;&#20276;&#38543;&#30340;&#26080;&#38480;&#32500;&#32039;&#31639;&#23376;&#65292;&#24182;&#24212;&#29992;&#20110;&#24674;&#22797;&#26925;&#22278;&#22411;&#20559;&#24494;&#20998;&#31639;&#23376;&#30340;&#26684;&#26519;&#20989;&#25968;&#12290;&#36825;&#26159;&#31532;&#19968;&#20010;&#35797;&#22270;&#22635;&#34917;&#31639;&#23376;&#23398;&#20064;&#29702;&#35770;&#19982;&#23454;&#36341;&#24046;&#36317;&#30340;&#26080;&#38656;&#20276;&#38543;&#31639;&#23376;&#20998;&#26512;&#12290;</title><link>https://arxiv.org/abs/2401.17739</link><description>&lt;p&gt;
&#19981;&#38656;&#35201;&#20276;&#38543;&#31639;&#23376;&#30340;&#31639;&#23376;&#23398;&#20064;
&lt;/p&gt;
&lt;p&gt;
Operator learning without the adjoint
&lt;/p&gt;
&lt;p&gt;
https://arxiv.org/abs/2401.17739
&lt;/p&gt;
&lt;p&gt;
&#26412;&#35770;&#25991;&#25552;&#20986;&#20102;&#19968;&#31181;&#19981;&#38656;&#35201;&#25506;&#27979;&#20276;&#38543;&#31639;&#23376;&#30340;&#31639;&#23376;&#23398;&#20064;&#26041;&#27861;&#65292;&#36890;&#36807;&#22312;Fourier&#22522;&#19978;&#36827;&#34892;&#25237;&#24433;&#26469;&#36924;&#36817;&#19968;&#31867;&#38750;&#33258;&#20276;&#38543;&#30340;&#26080;&#38480;&#32500;&#32039;&#31639;&#23376;&#65292;&#24182;&#24212;&#29992;&#20110;&#24674;&#22797;&#26925;&#22278;&#22411;&#20559;&#24494;&#20998;&#31639;&#23376;&#30340;&#26684;&#26519;&#20989;&#25968;&#12290;&#36825;&#26159;&#31532;&#19968;&#20010;&#35797;&#22270;&#22635;&#34917;&#31639;&#23376;&#23398;&#20064;&#29702;&#35770;&#19982;&#23454;&#36341;&#24046;&#36317;&#30340;&#26080;&#38656;&#20276;&#38543;&#31639;&#23376;&#20998;&#26512;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#31639;&#23376;&#23398;&#20064;&#20013;&#23384;&#22312;&#19968;&#20010;&#35868;&#22242;&#65306;&#22914;&#20309;&#22312;&#27809;&#26377;&#25506;&#27979;&#20276;&#38543;&#31639;&#23376;&#30340;&#24773;&#20917;&#19979;&#20174;&#25968;&#25454;&#20013;&#24674;&#22797;&#38750;&#33258;&#20276;&#38543;&#31639;&#23376;&#65311;&#30446;&#21069;&#30340;&#23454;&#38469;&#26041;&#27861;&#34920;&#26126;&#65292;&#22312;&#20165;&#20351;&#29992;&#30001;&#31639;&#23376;&#30340;&#27491;&#21521;&#20316;&#29992;&#29983;&#25104;&#30340;&#25968;&#25454;&#30340;&#24773;&#20917;&#19979;&#65292;&#21487;&#20197;&#20934;&#30830;&#22320;&#24674;&#22797;&#31639;&#23376;&#65292;&#32780;&#19981;&#38656;&#35201;&#35775;&#38382;&#20276;&#38543;&#31639;&#23376;&#12290;&#28982;&#32780;&#65292;&#20197;&#30452;&#35266;&#30340;&#26041;&#24335;&#30475;&#65292;&#20284;&#20046;&#26377;&#24517;&#35201;&#37319;&#26679;&#20276;&#38543;&#31639;&#23376;&#30340;&#20316;&#29992;&#12290;&#22312;&#26412;&#25991;&#20013;&#65292;&#25105;&#20204;&#37096;&#20998;&#35299;&#37322;&#20102;&#36825;&#20010;&#35868;&#22242;&#65292;&#36890;&#36807;&#35777;&#26126;&#22312;&#19981;&#26597;&#35810;&#20276;&#38543;&#31639;&#23376;&#30340;&#24773;&#20917;&#19979;&#65292;&#21487;&#20197;&#36890;&#36807;&#22312;Fourier&#22522;&#19978;&#36827;&#34892;&#25237;&#24433;&#26469;&#36924;&#36817;&#19968;&#31867;&#38750;&#33258;&#20276;&#38543;&#30340;&#26080;&#38480;&#32500;&#32039;&#31639;&#23376;&#12290;&#28982;&#21518;&#65292;&#25105;&#20204;&#23558;&#35813;&#32467;&#26524;&#24212;&#29992;&#20110;&#24674;&#22797;&#26925;&#22278;&#22411;&#20559;&#24494;&#20998;&#31639;&#23376;&#30340;&#26684;&#26519;&#20989;&#25968;&#65292;&#24182;&#23548;&#20986;&#19968;&#20010;&#26080;&#38656;&#20276;&#38543;&#31639;&#23376;&#30340;&#26679;&#26412;&#22797;&#26434;&#24230;&#30028;&#38480;&#12290;&#34429;&#28982;&#29616;&#26377;&#30340;&#29702;&#35770;&#35777;&#26126;&#20102;&#31639;&#23376;&#23398;&#20064;&#30340;&#20302;&#26679;&#26412;&#22797;&#26434;&#24230;&#65292;&#20294;&#25105;&#20204;&#30340;&#26159;&#31532;&#19968;&#20010;&#35797;&#22270;&#22635;&#34917;&#29702;&#35770;&#19982;&#23454;&#36341;&#24046;&#36317;&#30340;&#26080;&#38656;&#20276;&#38543;&#31639;&#23376;&#30340;&#20998;&#26512;&#12290;
&lt;/p&gt;
&lt;p&gt;
There is a mystery at the heart of operator learning: how can one recover a non-self-adjoint operator from data without probing the adjoint? Current practical approaches suggest that one can accurately recover an operator while only using data generated by the forward action of the operator without access to the adjoint. However, naively, it seems essential to sample the action of the adjoint. In this paper, we partially explain this mystery by proving that without querying the adjoint, one can approximate a family of non-self-adjoint infinite-dimensional compact operators via projection onto a Fourier basis. We then apply the result to recovering Green's functions of elliptic partial differential operators and derive an adjoint-free sample complexity bound. While existing theory justifies low sample complexity in operator learning, ours is the first adjoint-free analysis that attempts to close the gap between theory and practice.
&lt;/p&gt;</description></item></channel></rss>