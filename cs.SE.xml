<rss version="2.0"><channel><title>Chat Arxiv cs.SE</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.SE</description><item><title>&#26412;&#32508;&#36848;&#30740;&#31350;&#20102;&#21463;&#38480;&#23545;&#25239;&#23398;&#20064;&#26041;&#27861;&#21644;&#33258;&#21160;&#21270;&#36719;&#20214;&#27979;&#35797;&#20013;&#21463;&#38480;&#25968;&#25454;&#29983;&#25104;&#26041;&#27861;&#30340;&#26368;&#26032;&#25216;&#26415;&#24212;&#29992;&#65292;&#25506;&#35752;&#23558;&#36825;&#20123;&#26041;&#27861;&#25972;&#21512;&#33267;&#27979;&#35797;&#24037;&#20855;&#20013;&#20197;&#25552;&#39640;&#25968;&#23383;&#31995;&#32479;&#30340;&#40065;&#26834;&#24615;&#21644;&#24377;&#24615;&#12290;</title><link>http://arxiv.org/abs/2303.07546</link><description>&lt;p&gt;
&#21463;&#38480;&#23545;&#25239;&#23398;&#20064;&#21450;&#20854;&#22312;&#33258;&#21160;&#21270;&#36719;&#20214;&#27979;&#35797;&#20013;&#30340;&#24212;&#29992;&#65306;&#31995;&#32479;&#32508;&#36848;&#65288;arXiv:2303.07546v1 [cs.SE]&#65289;
&lt;/p&gt;
&lt;p&gt;
Constrained Adversarial Learning and its applicability to Automated Software Testing: a systematic review. (arXiv:2303.07546v1 [cs.SE])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2303.07546
&lt;/p&gt;
&lt;p&gt;
&#26412;&#32508;&#36848;&#30740;&#31350;&#20102;&#21463;&#38480;&#23545;&#25239;&#23398;&#20064;&#26041;&#27861;&#21644;&#33258;&#21160;&#21270;&#36719;&#20214;&#27979;&#35797;&#20013;&#21463;&#38480;&#25968;&#25454;&#29983;&#25104;&#26041;&#27861;&#30340;&#26368;&#26032;&#25216;&#26415;&#24212;&#29992;&#65292;&#25506;&#35752;&#23558;&#36825;&#20123;&#26041;&#27861;&#25972;&#21512;&#33267;&#27979;&#35797;&#24037;&#20855;&#20013;&#20197;&#25552;&#39640;&#25968;&#23383;&#31995;&#32479;&#30340;&#40065;&#26834;&#24615;&#21644;&#24377;&#24615;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#27599;&#31181;&#26032;&#25216;&#26415;&#37117;&#20250;&#22686;&#21152;&#38544;&#21547;&#30340;&#28431;&#27934;&#65292;&#35753;&#36234;&#26469;&#36234;&#22810;&#30340;&#32593;&#32476;&#25915;&#20987;&#32773;&#21033;&#29992;&#12290;&#33258;&#21160;&#21270;&#36719;&#20214;&#27979;&#35797;&#21487;&#20197;&#25104;&#20026;&#24555;&#36895;&#20998;&#26512;&#25968;&#21315;&#34892;&#20195;&#30721;&#30340;&#26377;&#21069;&#36884;&#30340;&#35299;&#20915;&#26041;&#26696;&#65292;&#36890;&#36807;&#29983;&#25104;&#21644;&#30053;&#24494;&#20462;&#25913;&#21151;&#33021;&#29305;&#23450;&#30340;&#27979;&#35797;&#25968;&#25454;&#26469;&#36935;&#21040;&#22810;&#20010;&#28431;&#27934;&#21644;&#25915;&#20987;&#21521;&#37327;&#12290;&#36825;&#20010;&#36807;&#31243;&#19982;&#21463;&#38480;&#23545;&#25239;&#23398;&#20064;&#26041;&#27861;&#29983;&#25104;&#30340;&#21463;&#38480;&#24615;&#23545;&#25239;&#24615;&#31034;&#20363;&#30456;&#20284;&#65292;&#22240;&#27492;&#23558;&#36825;&#20123;&#26041;&#27861;&#25972;&#21512;&#21040;&#33258;&#21160;&#21270;&#27979;&#35797;&#24037;&#20855;&#20013;&#21487;&#33021;&#20250;&#26377;&#26174;&#30528;&#30340;&#22909;&#22788;&#12290;&#22240;&#27492;&#65292;&#26412;&#31995;&#32479;&#32508;&#36848;&#20391;&#37325;&#20110;&#38480;&#21046;&#25968;&#25454;&#29983;&#25104;&#26041;&#27861;&#22312;&#23545;&#25239;&#23398;&#20064;&#21644;&#36719;&#20214;&#27979;&#35797;&#20013;&#30340;&#24212;&#29992;&#30340;&#24403;&#21069;&#26368;&#26032;&#25216;&#26415;&#65292;&#26088;&#22312;&#25351;&#23548;&#30740;&#31350;&#20154;&#21592;&#21644;&#24320;&#21457;&#20154;&#21592;&#20351;&#29992;&#23545;&#25239;&#23398;&#20064;&#26041;&#27861;&#22686;&#24378;&#27979;&#35797;&#24037;&#20855;&#65292;&#25552;&#39640;&#25968;&#23383;&#31995;&#32479;&#30340;&#24377;&#24615;&#21644;&#40065;&#26834;&#24615;&#12290;&#23545;&#20110;&#23545;&#25239;&#26426;&#22120;&#23398;&#20064;&#30340;&#21457;&#29616;&#21463;&#38480;&#21046;&#30340;&#25968;&#25454;&#29983;&#25104;&#24212;&#29992;&#26159;&#31995;&#32479;&#21270;&#30340;&#12290;
&lt;/p&gt;
&lt;p&gt;
Every novel technology adds hidden vulnerabilities ready to be exploited by a growing number of cyber-attacks. Automated software testing can be a promising solution to quickly analyze thousands of lines of code by generating and slightly modifying function-specific testing data to encounter a multitude of vulnerabilities and attack vectors. This process draws similarities to the constrained adversarial examples generated by adversarial learning methods, so there could be significant benefits to the integration of these methods in automated testing tools. Therefore, this systematic review is focused on the current state-of-the-art of constrained data generation methods applied for adversarial learning and software testing, aiming to guide researchers and developers to enhance testing tools with adversarial learning methods and improve the resilience and robustness of their digital systems. The found constrained data generation applications for adversarial machine learning were systemat
&lt;/p&gt;</description></item></channel></rss>