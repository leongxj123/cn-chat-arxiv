<rss version="2.0"><channel><title>Chat Arxiv cs.SE</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.SE</description><item><title>&#36825;&#31687;&#35770;&#25991;&#23545;&#22522;&#20110;&#22823;&#35821;&#35328;&#27169;&#22411;&#30340;&#27169;&#31946;&#27979;&#35797;&#25216;&#26415;&#36827;&#34892;&#20102;&#32508;&#36848;&#65292;&#25552;&#20379;&#20102;&#23545;LLMs&#12289;&#27169;&#31946;&#27979;&#35797;&#21644;&#22522;&#20110;LLMs&#30340;&#27169;&#31946;&#27979;&#35797;&#26041;&#27861;&#30340;&#31995;&#32479;&#27010;&#36848;&#65292;&#24182;&#35752;&#35770;&#20102;&#30456;&#20851;&#30340;&#25361;&#25112;&#21644;&#26410;&#26469;&#30340;&#30740;&#31350;&#26041;&#21521;&#12290;</title><link>https://arxiv.org/abs/2402.00350</link><description>&lt;p&gt;
&#22522;&#20110;&#22823;&#35821;&#35328;&#27169;&#22411;&#30340;&#27169;&#31946;&#27979;&#35797;&#25216;&#26415;&#65306;&#19968;&#39033;&#32508;&#36848;
&lt;/p&gt;
&lt;p&gt;
Large Language Models Based Fuzzing Techniques: A Survey
&lt;/p&gt;
&lt;p&gt;
https://arxiv.org/abs/2402.00350
&lt;/p&gt;
&lt;p&gt;
&#36825;&#31687;&#35770;&#25991;&#23545;&#22522;&#20110;&#22823;&#35821;&#35328;&#27169;&#22411;&#30340;&#27169;&#31946;&#27979;&#35797;&#25216;&#26415;&#36827;&#34892;&#20102;&#32508;&#36848;&#65292;&#25552;&#20379;&#20102;&#23545;LLMs&#12289;&#27169;&#31946;&#27979;&#35797;&#21644;&#22522;&#20110;LLMs&#30340;&#27169;&#31946;&#27979;&#35797;&#26041;&#27861;&#30340;&#31995;&#32479;&#27010;&#36848;&#65292;&#24182;&#35752;&#35770;&#20102;&#30456;&#20851;&#30340;&#25361;&#25112;&#21644;&#26410;&#26469;&#30340;&#30740;&#31350;&#26041;&#21521;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#22312;&#29616;&#20195;&#36719;&#20214;&#21457;&#25381;&#20851;&#38190;&#20316;&#29992;&#30340;&#26102;&#20195;&#65292;&#36719;&#20214;&#23433;&#20840;&#21644;&#28431;&#27934;&#20998;&#26512;&#23545;&#20110;&#36719;&#20214;&#24320;&#21457;&#21464;&#24471;&#33267;&#20851;&#37325;&#35201;&#12290;&#20316;&#20026;&#19968;&#31181;&#39640;&#25928;&#30340;&#36719;&#20214;&#27979;&#35797;&#26041;&#27861;&#65292;&#27169;&#31946;&#27979;&#35797;&#34987;&#24191;&#27867;&#24212;&#29992;&#20110;&#21508;&#20010;&#39046;&#22495;&#12290;&#27492;&#22806;&#65292;&#22823;&#35821;&#35328;&#27169;&#22411;&#65288;LLMs&#65289;&#30340;&#24555;&#36895;&#21457;&#23637;&#20351;&#23427;&#20204;&#21487;&#20197;&#22312;&#36719;&#20214;&#27979;&#35797;&#39046;&#22495;&#20013;&#24212;&#29992;&#65292;&#24182;&#23637;&#29616;&#20986;&#21331;&#36234;&#30340;&#24615;&#33021;&#12290;&#32771;&#34385;&#21040;&#29616;&#26377;&#30340;&#27169;&#31946;&#27979;&#35797;&#25216;&#26415;&#24182;&#19981;&#23436;&#20840;&#33258;&#21160;&#21270;&#65292;&#36719;&#20214;&#28431;&#27934;&#19981;&#26029;&#28436;&#21270;&#65292;&#36234;&#26469;&#36234;&#22810;&#30340;&#36235;&#21183;&#26159;&#37319;&#29992;&#22522;&#20110;&#22823;&#35821;&#35328;&#27169;&#22411;&#29983;&#25104;&#30340;&#27169;&#31946;&#27979;&#35797;&#12290;&#26412;&#32508;&#36848;&#25552;&#20379;&#20102;&#20851;&#20110;&#34701;&#21512;LLMs&#21644;&#27169;&#31946;&#27979;&#35797;&#30340;&#36719;&#20214;&#27979;&#35797;&#26041;&#27861;&#30340;&#31995;&#32479;&#27010;&#36848;&#12290;&#36890;&#36807;&#24635;&#32467;2024&#24180;&#20043;&#21069;&#30340;&#26368;&#26032;&#26041;&#27861;&#65292;&#23545;LLMs&#12289;&#27169;&#31946;&#27979;&#35797;&#21644;&#22522;&#20110;LLMs&#30340;&#27169;&#31946;&#27979;&#35797;&#36827;&#34892;&#32479;&#35745;&#20998;&#26512;&#21644;&#35752;&#35770;&#12290;&#25105;&#20204;&#30340;&#32508;&#36848;&#36824;&#30740;&#31350;&#20102;LLMs&#21644;&#27169;&#31946;&#27979;&#35797;&#22312;&#36719;&#20214;&#27979;&#35797;&#39046;&#22495;&#30340;&#24212;&#29992;&#65292;&#24182;&#35752;&#35770;&#20102;&#30456;&#20851;&#30340;&#25361;&#25112;&#21644;&#26410;&#26469;&#30340;&#30740;&#31350;&#26041;&#21521;&#12290;
&lt;/p&gt;
&lt;p&gt;
In the modern era where software plays a pivotal role, software security and vulnerability analysis have become essential for software development. Fuzzing test, as an efficient software testing method, are widely used in various domains. Moreover, the rapid development of Large Language Models (LLMs) has facilitated their application in the field of software testing, demonstrating remarkable performance. Considering that existing fuzzing test techniques are not entirely automated and software vulnerabilities continue to evolve, there is a growing trend towards employing fuzzing test generated based on large language models. This survey provides a systematic overview of the approaches that fuse LLMs and fuzzing tests for software testing. In this paper, a statistical analysis and discussion of the literature in three areas, namely LLMs, fuzzing test, and fuzzing test generated based on LLMs, are conducted by summarising the state-of-the-art methods up until 2024. Our survey also invest
&lt;/p&gt;</description></item><item><title>&#26412;&#32508;&#36848;&#30740;&#31350;&#20102;&#21463;&#38480;&#23545;&#25239;&#23398;&#20064;&#26041;&#27861;&#21644;&#33258;&#21160;&#21270;&#36719;&#20214;&#27979;&#35797;&#20013;&#21463;&#38480;&#25968;&#25454;&#29983;&#25104;&#26041;&#27861;&#30340;&#26368;&#26032;&#25216;&#26415;&#24212;&#29992;&#65292;&#25506;&#35752;&#23558;&#36825;&#20123;&#26041;&#27861;&#25972;&#21512;&#33267;&#27979;&#35797;&#24037;&#20855;&#20013;&#20197;&#25552;&#39640;&#25968;&#23383;&#31995;&#32479;&#30340;&#40065;&#26834;&#24615;&#21644;&#24377;&#24615;&#12290;</title><link>http://arxiv.org/abs/2303.07546</link><description>&lt;p&gt;
&#21463;&#38480;&#23545;&#25239;&#23398;&#20064;&#21450;&#20854;&#22312;&#33258;&#21160;&#21270;&#36719;&#20214;&#27979;&#35797;&#20013;&#30340;&#24212;&#29992;&#65306;&#31995;&#32479;&#32508;&#36848;&#65288;arXiv:2303.07546v1 [cs.SE]&#65289;
&lt;/p&gt;
&lt;p&gt;
Constrained Adversarial Learning and its applicability to Automated Software Testing: a systematic review. (arXiv:2303.07546v1 [cs.SE])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2303.07546
&lt;/p&gt;
&lt;p&gt;
&#26412;&#32508;&#36848;&#30740;&#31350;&#20102;&#21463;&#38480;&#23545;&#25239;&#23398;&#20064;&#26041;&#27861;&#21644;&#33258;&#21160;&#21270;&#36719;&#20214;&#27979;&#35797;&#20013;&#21463;&#38480;&#25968;&#25454;&#29983;&#25104;&#26041;&#27861;&#30340;&#26368;&#26032;&#25216;&#26415;&#24212;&#29992;&#65292;&#25506;&#35752;&#23558;&#36825;&#20123;&#26041;&#27861;&#25972;&#21512;&#33267;&#27979;&#35797;&#24037;&#20855;&#20013;&#20197;&#25552;&#39640;&#25968;&#23383;&#31995;&#32479;&#30340;&#40065;&#26834;&#24615;&#21644;&#24377;&#24615;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#27599;&#31181;&#26032;&#25216;&#26415;&#37117;&#20250;&#22686;&#21152;&#38544;&#21547;&#30340;&#28431;&#27934;&#65292;&#35753;&#36234;&#26469;&#36234;&#22810;&#30340;&#32593;&#32476;&#25915;&#20987;&#32773;&#21033;&#29992;&#12290;&#33258;&#21160;&#21270;&#36719;&#20214;&#27979;&#35797;&#21487;&#20197;&#25104;&#20026;&#24555;&#36895;&#20998;&#26512;&#25968;&#21315;&#34892;&#20195;&#30721;&#30340;&#26377;&#21069;&#36884;&#30340;&#35299;&#20915;&#26041;&#26696;&#65292;&#36890;&#36807;&#29983;&#25104;&#21644;&#30053;&#24494;&#20462;&#25913;&#21151;&#33021;&#29305;&#23450;&#30340;&#27979;&#35797;&#25968;&#25454;&#26469;&#36935;&#21040;&#22810;&#20010;&#28431;&#27934;&#21644;&#25915;&#20987;&#21521;&#37327;&#12290;&#36825;&#20010;&#36807;&#31243;&#19982;&#21463;&#38480;&#23545;&#25239;&#23398;&#20064;&#26041;&#27861;&#29983;&#25104;&#30340;&#21463;&#38480;&#24615;&#23545;&#25239;&#24615;&#31034;&#20363;&#30456;&#20284;&#65292;&#22240;&#27492;&#23558;&#36825;&#20123;&#26041;&#27861;&#25972;&#21512;&#21040;&#33258;&#21160;&#21270;&#27979;&#35797;&#24037;&#20855;&#20013;&#21487;&#33021;&#20250;&#26377;&#26174;&#30528;&#30340;&#22909;&#22788;&#12290;&#22240;&#27492;&#65292;&#26412;&#31995;&#32479;&#32508;&#36848;&#20391;&#37325;&#20110;&#38480;&#21046;&#25968;&#25454;&#29983;&#25104;&#26041;&#27861;&#22312;&#23545;&#25239;&#23398;&#20064;&#21644;&#36719;&#20214;&#27979;&#35797;&#20013;&#30340;&#24212;&#29992;&#30340;&#24403;&#21069;&#26368;&#26032;&#25216;&#26415;&#65292;&#26088;&#22312;&#25351;&#23548;&#30740;&#31350;&#20154;&#21592;&#21644;&#24320;&#21457;&#20154;&#21592;&#20351;&#29992;&#23545;&#25239;&#23398;&#20064;&#26041;&#27861;&#22686;&#24378;&#27979;&#35797;&#24037;&#20855;&#65292;&#25552;&#39640;&#25968;&#23383;&#31995;&#32479;&#30340;&#24377;&#24615;&#21644;&#40065;&#26834;&#24615;&#12290;&#23545;&#20110;&#23545;&#25239;&#26426;&#22120;&#23398;&#20064;&#30340;&#21457;&#29616;&#21463;&#38480;&#21046;&#30340;&#25968;&#25454;&#29983;&#25104;&#24212;&#29992;&#26159;&#31995;&#32479;&#21270;&#30340;&#12290;
&lt;/p&gt;
&lt;p&gt;
Every novel technology adds hidden vulnerabilities ready to be exploited by a growing number of cyber-attacks. Automated software testing can be a promising solution to quickly analyze thousands of lines of code by generating and slightly modifying function-specific testing data to encounter a multitude of vulnerabilities and attack vectors. This process draws similarities to the constrained adversarial examples generated by adversarial learning methods, so there could be significant benefits to the integration of these methods in automated testing tools. Therefore, this systematic review is focused on the current state-of-the-art of constrained data generation methods applied for adversarial learning and software testing, aiming to guide researchers and developers to enhance testing tools with adversarial learning methods and improve the resilience and robustness of their digital systems. The found constrained data generation applications for adversarial machine learning were systemat
&lt;/p&gt;</description></item></channel></rss>