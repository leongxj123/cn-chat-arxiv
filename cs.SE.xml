<rss version="2.0"><channel><title>Chat Arxiv cs.SE</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.SE</description><item><title>&#26412;&#35770;&#25991;&#25506;&#35752;&#20102;&#22312;&#22823;&#22411;&#35821;&#35328;&#27169;&#22411;&#26102;&#20195;&#30340;&#33258;&#21160;&#32570;&#38519;&#29983;&#25104;&#38382;&#39064;&#65292;&#38024;&#23545;&#38590;&#20197;&#26816;&#27979;&#21644;&#38590;&#20197;&#20462;&#22797;&#30340;&#32570;&#38519;&#25552;&#20986;&#20102;&#35299;&#20915;&#26041;&#26696;&#65292;&#24182;&#20998;&#26512;&#20102;&#22522;&#20110;&#23398;&#20064;&#30340;&#25216;&#26415;&#20013;&#36825;&#20004;&#20010;&#30446;&#26631;&#30340;&#20914;&#31361;&#12290;</title><link>http://arxiv.org/abs/2310.02407</link><description>&lt;p&gt;
&#22312;&#22823;&#22411;&#35821;&#35328;&#27169;&#22411;&#26102;&#20195;&#30340;&#33258;&#21160;&#32570;&#38519;&#29983;&#25104;
&lt;/p&gt;
&lt;p&gt;
Automated Bug Generation in the era of Large Language Models. (arXiv:2310.02407v1 [cs.SE])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2310.02407
&lt;/p&gt;
&lt;p&gt;
&#26412;&#35770;&#25991;&#25506;&#35752;&#20102;&#22312;&#22823;&#22411;&#35821;&#35328;&#27169;&#22411;&#26102;&#20195;&#30340;&#33258;&#21160;&#32570;&#38519;&#29983;&#25104;&#38382;&#39064;&#65292;&#38024;&#23545;&#38590;&#20197;&#26816;&#27979;&#21644;&#38590;&#20197;&#20462;&#22797;&#30340;&#32570;&#38519;&#25552;&#20986;&#20102;&#35299;&#20915;&#26041;&#26696;&#65292;&#24182;&#20998;&#26512;&#20102;&#22522;&#20110;&#23398;&#20064;&#30340;&#25216;&#26415;&#20013;&#36825;&#20004;&#20010;&#30446;&#26631;&#30340;&#20914;&#31361;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#32570;&#38519;&#22312;&#36719;&#20214;&#24037;&#31243;&#20013;&#26159;&#33267;&#20851;&#37325;&#35201;&#30340;&#65307;&#36807;&#21435;&#20960;&#21313;&#24180;&#30340;&#35768;&#22810;&#30740;&#31350;&#24050;&#32463;&#25552;&#20986;&#20102;&#26816;&#27979;&#12289;&#23450;&#20301;&#21644;&#20462;&#22797;&#36719;&#20214;&#31995;&#32479;&#20013;&#30340;&#32570;&#38519;&#30340;&#26041;&#27861;&#12290;&#35780;&#20272;&#36825;&#20123;&#25216;&#26415;&#30340;&#26377;&#25928;&#24615;&#38656;&#35201;&#22797;&#26434;&#30340;&#32570;&#38519;&#65292;&#21363;&#37027;&#20123;&#24456;&#38590;&#36890;&#36807;&#27979;&#35797;&#21644;&#35843;&#35797;&#26469;&#26816;&#27979;&#21644;&#20462;&#22797;&#30340;&#32570;&#38519;&#12290;&#20174;&#20256;&#32479;&#36719;&#20214;&#24037;&#31243;&#30340;&#35282;&#24230;&#26469;&#30475;&#65292;&#38590;&#20197;&#20462;&#22797;&#30340;&#32570;&#38519;&#19982;&#27491;&#30830;&#30340;&#20195;&#30721;&#22312;&#22810;&#20010;&#20301;&#32622;&#19978;&#26377;&#25152;&#24046;&#24322;&#65292;&#36825;&#20351;&#24471;&#23427;&#20204;&#38590;&#20197;&#23450;&#20301;&#21644;&#20462;&#22797;&#12290;&#32780;&#38590;&#20197;&#26816;&#27979;&#30340;&#32570;&#38519;&#21017;&#22312;&#29305;&#23450;&#30340;&#27979;&#35797;&#36755;&#20837;&#21644;&#21487;&#36798;&#26465;&#20214;&#19979;&#23637;&#29616;&#20986;&#26469;&#12290;&#36825;&#20004;&#20010;&#30446;&#26631;&#65292;&#21363;&#29983;&#25104;&#38590;&#20197;&#26816;&#27979;&#21644;&#38590;&#20197;&#20462;&#22797;&#30340;&#32570;&#38519;&#65292;&#22823;&#22810;&#25968;&#26159;&#19968;&#33268;&#30340;&#65307;&#32570;&#38519;&#29983;&#25104;&#25216;&#26415;&#21487;&#20197;&#23558;&#22810;&#20010;&#35821;&#21477;&#26356;&#25913;&#20026;&#20165;&#22312;&#29305;&#23450;&#36755;&#20837;&#38598;&#21512;&#19979;&#34987;&#35206;&#30422;&#12290;&#28982;&#32780;&#65292;&#23545;&#20110;&#22522;&#20110;&#23398;&#20064;&#30340;&#25216;&#26415;&#26469;&#35828;&#65292;&#36825;&#20004;&#20010;&#30446;&#26631;&#26159;&#30456;&#20114;&#20914;&#31361;&#30340;&#65306;&#19968;&#20010;&#32570;&#38519;&#24212;&#35813;&#26377;&#19982;&#35757;&#32451;&#25968;&#25454;&#20013;&#30340;&#27491;&#30830;&#20195;&#30721;&#30456;&#20284;&#30340;&#20195;&#30721;&#34920;&#31034;&#65292;&#20197;&#25361;&#25112;&#32570;&#38519;&#39044;&#27979;&#12290;
&lt;/p&gt;
&lt;p&gt;
Bugs are essential in software engineering; many research studies in the past decades have been proposed to detect, localize, and repair bugs in software systems. Effectiveness evaluation of such techniques requires complex bugs, i.e., those that are hard to detect through testing and hard to repair through debugging. From the classic software engineering point of view, a hard-to-repair bug differs from the correct code in multiple locations, making it hard to localize and repair. Hard-to-detect bugs, on the other hand, manifest themselves under specific test inputs and reachability conditions. These two objectives, i.e., generating hard-to-detect and hard-to-repair bugs, are mostly aligned; a bug generation technique can change multiple statements to be covered only under a specific set of inputs. However, these two objectives are conflicting for learning-based techniques: A bug should have a similar code representation to the correct code in the training data to challenge a bug predi
&lt;/p&gt;</description></item></channel></rss>