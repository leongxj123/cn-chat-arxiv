<rss version="2.0"><channel><title>Chat Arxiv cs.SE</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.SE</description><item><title>&#35813;&#35770;&#25991;&#24341;&#20837;&#20102;&#19968;&#31181;&#26032;&#26041;&#27861;&#65292;&#36890;&#36807;&#23558;&#31639;&#26415;&#30005;&#36335;&#32422;&#26463;&#32534;&#30721;&#20026;&#22810;&#39033;&#24335;&#26041;&#31243;&#31995;&#32479;&#65292;&#24182;&#36890;&#36807;&#20195;&#25968;&#35745;&#31639;&#22312;&#26377;&#38480;&#22495;&#19978;&#35299;&#20915;&#22810;&#39033;&#24335;&#26041;&#31243;&#31995;&#32479;&#65292;&#20197;&#31934;&#30830;&#23450;&#20301;ZKP&#30005;&#36335;&#20013;&#20004;&#31181;&#19981;&#21516;&#31867;&#22411;&#30340;&#38169;&#35823;&#12290;</title><link>https://arxiv.org/abs/2403.15676</link><description>&lt;p&gt;
AC4&#65306;&#29992;&#20110;ZKP&#20013;&#30005;&#36335;&#32422;&#26463;&#30340;&#20195;&#25968;&#35745;&#31639;&#26816;&#26597;&#22120;
&lt;/p&gt;
&lt;p&gt;
AC4: Algebraic Computation Checker for Circuit Constraints in ZKPs
&lt;/p&gt;
&lt;p&gt;
https://arxiv.org/abs/2403.15676
&lt;/p&gt;
&lt;p&gt;
&#35813;&#35770;&#25991;&#24341;&#20837;&#20102;&#19968;&#31181;&#26032;&#26041;&#27861;&#65292;&#36890;&#36807;&#23558;&#31639;&#26415;&#30005;&#36335;&#32422;&#26463;&#32534;&#30721;&#20026;&#22810;&#39033;&#24335;&#26041;&#31243;&#31995;&#32479;&#65292;&#24182;&#36890;&#36807;&#20195;&#25968;&#35745;&#31639;&#22312;&#26377;&#38480;&#22495;&#19978;&#35299;&#20915;&#22810;&#39033;&#24335;&#26041;&#31243;&#31995;&#32479;&#65292;&#20197;&#31934;&#30830;&#23450;&#20301;ZKP&#30005;&#36335;&#20013;&#20004;&#31181;&#19981;&#21516;&#31867;&#22411;&#30340;&#38169;&#35823;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
ZKP&#31995;&#32479;&#24050;&#32463;&#24341;&#36215;&#20102;&#20154;&#20204;&#30340;&#20851;&#27880;&#65292;&#22312;&#24403;&#20195;&#23494;&#30721;&#23398;&#20013;&#21457;&#25381;&#30528;&#22522;&#30784;&#24615;&#20316;&#29992;&#12290; Zk-SNARK&#21327;&#35758;&#20027;&#23548;&#20102;ZKP&#30340;&#20351;&#29992;&#65292;&#36890;&#24120;&#36890;&#36807;&#31639;&#26415;&#30005;&#36335;&#32534;&#31243;&#33539;&#24335;&#23454;&#29616;&#12290;&#28982;&#32780;&#65292;&#27424;&#32422;&#26463;&#25110;&#36807;&#32422;&#26463;&#30340;&#30005;&#36335;&#21487;&#33021;&#23548;&#33268;&#38169;&#35823;&#12290; &#27424;&#32422;&#26463;&#30340;&#30005;&#36335;&#25351;&#30340;&#26159;&#32570;&#20047;&#24517;&#35201;&#32422;&#26463;&#30340;&#30005;&#36335;&#65292;&#23548;&#33268;&#30005;&#36335;&#20013;&#20986;&#29616;&#24847;&#22806;&#35299;&#20915;&#26041;&#26696;&#65292;&#24182;&#23548;&#33268;&#39564;&#35777;&#32773;&#25509;&#21463;&#38169;&#35823;&#35265;&#35777;&#12290; &#36807;&#32422;&#26463;&#30340;&#30005;&#36335;&#26159;&#25351;&#32422;&#26463;&#36807;&#24230;&#30340;&#30005;&#36335;&#65292;&#23548;&#33268;&#30005;&#36335;&#32570;&#20047;&#24517;&#35201;&#30340;&#35299;&#20915;&#26041;&#26696;&#65292;&#24182;&#23548;&#33268;&#39564;&#35777;&#32773;&#25509;&#21463;&#27809;&#26377;&#35265;&#35777;&#65292;&#20351;&#30005;&#36335;&#27627;&#26080;&#24847;&#20041;&#12290; &#26412;&#25991;&#20171;&#32461;&#20102;&#19968;&#31181;&#26032;&#26041;&#27861;&#65292;&#29992;&#20110;&#25214;&#20986;ZKP&#30005;&#36335;&#20013;&#20004;&#31181;&#19981;&#21516;&#31867;&#22411;&#30340;&#38169;&#35823;&#12290; &#35813;&#26041;&#27861;&#28041;&#21450;&#23558;&#31639;&#26415;&#30005;&#36335;&#32422;&#26463;&#32534;&#30721;&#20026;&#22810;&#39033;&#24335;&#26041;&#31243;&#31995;&#32479;&#65292;&#24182;&#36890;&#36807;&#20195;&#25968;&#35745;&#31639;&#22312;&#26377;&#38480;&#22495;&#19978;&#35299;&#20915;&#22810;&#39033;&#24335;&#26041;&#31243;&#31995;&#32479;&#12290;
&lt;/p&gt;
&lt;p&gt;
arXiv:2403.15676v1 Announce Type: cross  Abstract: ZKP systems have surged attention and held a fundamental role in contemporary cryptography. Zk-SNARK protocols dominate the ZKP usage, often implemented through arithmetic circuit programming paradigm. However, underconstrained or overconstrained circuits may lead to bugs. Underconstrained circuits refer to circuits that lack the necessary constraints, resulting in unexpected solutions in the circuit and causing the verifier to accept a bogus witness. Overconstrained circuits refer to circuits that are constrained excessively, resulting in the circuit lacking necessary solutions and causing the verifier to accept no witness, rendering the circuit meaningless. This paper introduces a novel approach for pinpointing two distinct types of bugs in ZKP circuits. The method involves encoding the arithmetic circuit constraints to polynomial equation systems and solving polynomial equation systems over a finite field by algebraic computation. T
&lt;/p&gt;</description></item></channel></rss>