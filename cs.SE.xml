<rss version="2.0"><channel><title>Chat Arxiv cs.SE</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.SE</description><item><title>ZS4C&#25552;&#20986;&#20102;&#19968;&#31181;&#20351;&#29992;ChatGPT&#36827;&#34892;&#38646;&#23556;&#20987;&#21512;&#25104;&#21487;&#32534;&#35793;&#20195;&#30721;&#30340;&#36731;&#37327;&#32423;&#26041;&#27861;&#65292;&#24110;&#21161;&#29992;&#25143;&#37325;&#29992;&#25110;&#20998;&#26512;&#19981;&#23436;&#25972;&#30340;Q&amp;A&#20195;&#30721;&#29255;&#27573;&#65292;&#36890;&#36807;&#35782;&#21035;&#32570;&#22833;&#30340;&#23548;&#20837;&#35821;&#21477;&#24182;&#20462;&#22797;&#32534;&#35793;&#38169;&#35823;&#26469;&#23454;&#29616;&#12290;</title><link>http://arxiv.org/abs/2401.14279</link><description>&lt;p&gt;
ZS4C: &#20351;&#29992;ChatGPT&#36827;&#34892;&#38646;&#23556;&#20987;&#21512;&#25104;&#19981;&#23436;&#25972;&#20195;&#30721;&#29255;&#27573;&#30340;&#21487;&#32534;&#35793;&#20195;&#30721;
&lt;/p&gt;
&lt;p&gt;
ZS4C: Zero-Shot Synthesis of Compilable Code for Incomplete Code Snippets using ChatGPT. (arXiv:2401.14279v1 [cs.SE] CROSS LISTED)
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2401.14279
&lt;/p&gt;
&lt;p&gt;
ZS4C&#25552;&#20986;&#20102;&#19968;&#31181;&#20351;&#29992;ChatGPT&#36827;&#34892;&#38646;&#23556;&#20987;&#21512;&#25104;&#21487;&#32534;&#35793;&#20195;&#30721;&#30340;&#36731;&#37327;&#32423;&#26041;&#27861;&#65292;&#24110;&#21161;&#29992;&#25143;&#37325;&#29992;&#25110;&#20998;&#26512;&#19981;&#23436;&#25972;&#30340;Q&amp;A&#20195;&#30721;&#29255;&#27573;&#65292;&#36890;&#36807;&#35782;&#21035;&#32570;&#22833;&#30340;&#23548;&#20837;&#35821;&#21477;&#24182;&#20462;&#22797;&#32534;&#35793;&#38169;&#35823;&#26469;&#23454;&#29616;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#25216;&#26415;&#38382;&#31572;&#65288;Q&amp;A&#65289;&#32593;&#31449;&#22914;Stack Overflow&#24050;&#25104;&#20026;&#36719;&#20214;&#24320;&#21457;&#32773;&#23547;&#27714;&#30693;&#35782;&#30340;&#37325;&#35201;&#26469;&#28304;&#12290;&#28982;&#32780;&#65292;Q&amp;A&#32593;&#31449;&#19978;&#30340;&#20195;&#30721;&#29255;&#27573;&#36890;&#24120;&#30001;&#20110;&#26410;&#35299;&#26512;&#30340;&#31867;&#22411;&#21644;&#32570;&#22833;&#30340;&#20381;&#36182;&#24211;&#32780;&#26080;&#27861;&#32534;&#35793;&#21644;&#35821;&#20041;&#19978;&#19981;&#23436;&#25972;&#65292;&#36825;&#22686;&#21152;&#20102;&#29992;&#25143;&#37325;&#29992;&#25110;&#20998;&#26512;Q&amp;A&#20195;&#30721;&#29255;&#27573;&#30340;&#38556;&#30861;&#12290;&#20043;&#21069;&#30340;&#26041;&#27861;&#35201;&#20040;&#19981;&#36866;&#29992;&#20110;&#21512;&#25104;&#21487;&#32534;&#35793;&#20195;&#30721;&#65292;&#35201;&#20040;&#32534;&#35793;&#25104;&#21151;&#29575;&#20302;&#12290;&#20026;&#20102;&#35299;&#20915;&#36825;&#20010;&#38382;&#39064;&#65292;&#25105;&#20204;&#25552;&#20986;&#20102;ZS4C&#65292;&#19968;&#31181;&#20351;&#29992;&#22823;&#22411;&#35821;&#35328;&#27169;&#22411;&#65288;LLM&#65289;&#20174;&#19981;&#23436;&#25972;&#30340;&#20195;&#30721;&#29255;&#27573;&#20013;&#36827;&#34892;&#38646;&#23556;&#20987;&#21512;&#25104;&#21487;&#32534;&#35793;&#20195;&#30721;&#30340;&#36731;&#37327;&#32423;&#26041;&#27861;&#12290;ZS4C&#20998;&#20026;&#20004;&#20010;&#38454;&#27573;&#12290;&#22312;&#31532;&#19968;&#38454;&#27573;&#65292;ZS4C&#21033;&#29992;&#19968;&#20010;LLM&#65292;&#21363;ChatGPT&#65292;&#26681;&#25454;&#25105;&#20204;&#35774;&#35745;&#30340;&#19987;&#29992;&#20219;&#21153;&#25552;&#31034;&#27169;&#26495;&#65292;&#20026;&#32473;&#23450;&#30340;&#20195;&#30721;&#29255;&#27573;&#35782;&#21035;&#32570;&#22833;&#30340;&#23548;&#20837;&#35821;&#21477;&#12290;&#22312;&#31532;&#20108;&#38454;&#27573;&#65292;ZS4C&#36890;&#36807;&#20462;&#22797;&#30001;&#20110;&#19981;&#27491;&#30830;&#30340;&#23548;&#20837;&#35821;&#21477;&#21644;&#35821;&#27861;&#38169;&#35823;&#24341;&#36215;&#30340;&#32534;&#35793;&#38169;&#35823;&#26469;&#20462;&#22797;&#20195;&#30721;&#12290;
&lt;/p&gt;
&lt;p&gt;
Technical question and answering (Q&amp;A) sites such as Stack Overflow have become an important source for software developers to seek knowledge. However, code snippets on Q&amp;A sites are usually uncompilable and semantically incomplete for compilation due to unresolved types and missing dependent libraries, which raises the obstacle for users to reuse or analyze Q&amp;A code snippets. Prior approaches either are not designed for synthesizing compilable code or suffer from a low compilation success rate. To address this problem, we propose ZS4C, a lightweight approach to perform zero-shot synthesis of compilable code from incomplete code snippets using Large Language Model (LLM). ZS4C operates in two stages. In the first stage, ZS4C utilizes an LLM, i.e., ChatGPT, to identify missing import statements for a given code snippet, leveraging our designed task-specific prompt template. In the second stage, ZS4C fixes compilation errors caused by incorrect import statements and syntax errors through 
&lt;/p&gt;</description></item><item><title>&#26412;&#25991;&#25552;&#20986;&#20102;&#25968;&#23383;&#23402;&#29983;&#30340;&#27010;&#24565;&#65292;&#20351;&#29992;&#19981;&#21516;&#25216;&#26415;&#26500;&#24314;&#22810;&#20010;&#36890;&#29992;&#20223;&#30495;&#22120;&#65292;&#24378;&#21270;&#20102;&#33258;&#21160;&#39550;&#39542;&#36719;&#20214;&#30340;&#22522;&#20110;&#20223;&#30495;&#30340;&#27979;&#35797;&#65292;&#25552;&#39640;&#20102;&#27979;&#35797;&#32467;&#26524;&#30340;&#26222;&#36866;&#24615;&#21644;&#21487;&#38752;&#24615;&#12290;</title><link>http://arxiv.org/abs/2305.08060</link><description>&lt;p&gt;
&#20004;&#20010;&#20248;&#20110;&#19968;&#20010;&#65306;&#25968;&#23383;&#23402;&#29983;&#20197;&#25552;&#39640;&#33258;&#21160;&#39550;&#39542;&#27979;&#35797;
&lt;/p&gt;
&lt;p&gt;
Two is Better Than One: Digital Siblings to Improve Autonomous Driving Testing. (arXiv:2305.08060v1 [cs.SE])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2305.08060
&lt;/p&gt;
&lt;p&gt;
&#26412;&#25991;&#25552;&#20986;&#20102;&#25968;&#23383;&#23402;&#29983;&#30340;&#27010;&#24565;&#65292;&#20351;&#29992;&#19981;&#21516;&#25216;&#26415;&#26500;&#24314;&#22810;&#20010;&#36890;&#29992;&#20223;&#30495;&#22120;&#65292;&#24378;&#21270;&#20102;&#33258;&#21160;&#39550;&#39542;&#36719;&#20214;&#30340;&#22522;&#20110;&#20223;&#30495;&#30340;&#27979;&#35797;&#65292;&#25552;&#39640;&#20102;&#27979;&#35797;&#32467;&#26524;&#30340;&#26222;&#36866;&#24615;&#21644;&#21487;&#38752;&#24615;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#22522;&#20110;&#20223;&#30495;&#30340;&#27979;&#35797;&#26159;&#30830;&#20445;&#33258;&#21160;&#39550;&#39542;&#36719;&#20214;&#21487;&#38752;&#24615;&#30340;&#37325;&#35201;&#19968;&#27493;&#12290;&#23454;&#38469;&#20013;&#65292;&#24403;&#20225;&#19994;&#20381;&#36182;&#31532;&#19977;&#26041;&#36890;&#29992;&#20223;&#30495;&#22120;&#36827;&#34892;&#20869;&#37096;&#25110;&#22806;&#21253;&#27979;&#35797;&#26102;&#65292;&#27979;&#35797;&#32467;&#26524;&#30340;&#26222;&#36866;&#24615;&#21463;&#21040;&#23041;&#32961;&#12290;&#22312;&#26412;&#25991;&#20013;&#65292;&#25105;&#20204;&#36890;&#36807;&#24341;&#20837;&#8220;&#25968;&#23383;&#23402;&#29983;&#8221;&#30340;&#27010;&#24565;&#21152;&#24378;&#20102;&#22522;&#20110;&#20223;&#30495;&#30340;&#27979;&#35797;&#65292;&#36825;&#26159;&#19968;&#20010;&#26032;&#39062;&#30340;&#26694;&#26550;&#65292;&#22312;&#20854;&#20013;AV&#22312;&#22810;&#20010;&#20351;&#29992;&#19981;&#21516;&#25216;&#26415;&#26500;&#24314;&#30340;&#36890;&#29992;&#20223;&#30495;&#22120;&#19978;&#36827;&#34892;&#27979;&#35797;&#12290;&#39318;&#20808;&#65292;&#38024;&#23545;&#27599;&#20010;&#21333;&#29420;&#30340;&#20223;&#30495;&#22120;&#33258;&#21160;&#29983;&#25104;&#27979;&#35797;&#29992;&#20363;&#12290;&#28982;&#21518;&#65292;&#20351;&#29992;&#29305;&#24449;&#26144;&#23556;&#23558;&#27979;&#35797;&#36801;&#31227;&#33267;&#21508;&#20010;&#20223;&#30495;&#22120;&#20043;&#38388;&#65292;&#20197;&#34920;&#24449;&#25152;&#36827;&#34892;&#30340;&#34892;&#39542;&#26465;&#20214;&#12290;&#26368;&#21518;&#65292;&#35745;&#31639;&#32852;&#21512;&#39044;&#27979;&#22833;&#25928;&#27010;&#29575;&#65292;&#24182;&#20165;&#22312;&#23402;&#29983;&#20043;&#38388;&#36798;&#25104;&#19968;&#33268;&#30340;&#24773;&#20917;&#19979;&#25253;&#21578;&#25925;&#38556;&#12290;&#25105;&#20204;&#20351;&#29992;&#20004;&#20010;&#24320;&#28304;&#20223;&#30495;&#22120;&#23454;&#29616;&#20102;&#35813;&#26694;&#26550;&#65292;&#24182;&#22312;&#25968;&#23383;&#23402;&#29983;&#30340;&#29289;&#29702;&#27604;&#20363;&#27169;&#22411;&#19978;&#36827;&#34892;&#20102;&#32463;&#39564;&#27604;&#36739;&#12290;
&lt;/p&gt;
&lt;p&gt;
Simulation-based testing represents an important step to ensure the reliability of autonomous driving software. In practice, when companies rely on third-party general-purpose simulators, either for in-house or outsourced testing, the generalizability of testing results to real autonomous vehicles is at stake.  In this paper, we strengthen simulation-based testing by introducing the notion of digital siblings, a novel framework in which the AV is tested on multiple general-purpose simulators, built with different technologies. First, test cases are automatically generated for each individual simulator. Then, tests are migrated between simulators, using feature maps to characterize of the exercised driving conditions. Finally, the joint predicted failure probability is computed and a failure is reported only in cases of agreement among the siblings.  We implemented our framework using two open-source simulators and we empirically compared it against a digital twin of a physical scaled a
&lt;/p&gt;</description></item></channel></rss>