<rss version="2.0"><channel><title>Chat Arxiv cs.SE</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.SE</description><item><title>&#25552;&#20986;&#20102;&#19968;&#31181;&#29992;&#20110;Python&#39033;&#30446;&#30340;&#21160;&#24577;&#20998;&#26512;&#31649;&#36947;&#65292;&#32467;&#21512;&#27169;&#31946;&#27979;&#35797;&#12289;&#35821;&#26009;&#24211;&#26368;&#23567;&#21270;&#12289;&#23849;&#28291;&#20998;&#31867;&#21644;&#35206;&#30422;&#29575;&#25910;&#38598;&#65292;&#20197;&#30830;&#20445;&#26426;&#22120;&#23398;&#20064;&#26694;&#26550;&#30340;&#23433;&#20840;&#24615;&#21644;&#21487;&#38752;&#24615;&#12290;</title><link>https://arxiv.org/abs/2403.12723</link><description>&lt;p&gt;
&#29992;&#20110;&#21487;&#20449;&#36182;&#30340;&#26426;&#22120;&#23398;&#20064;&#26694;&#26550;&#30340;Python&#27169;&#31946;&#27979;&#35797;
&lt;/p&gt;
&lt;p&gt;
Python Fuzzing for Trustworthy Machine Learning Frameworks
&lt;/p&gt;
&lt;p&gt;
https://arxiv.org/abs/2403.12723
&lt;/p&gt;
&lt;p&gt;
&#25552;&#20986;&#20102;&#19968;&#31181;&#29992;&#20110;Python&#39033;&#30446;&#30340;&#21160;&#24577;&#20998;&#26512;&#31649;&#36947;&#65292;&#32467;&#21512;&#27169;&#31946;&#27979;&#35797;&#12289;&#35821;&#26009;&#24211;&#26368;&#23567;&#21270;&#12289;&#23849;&#28291;&#20998;&#31867;&#21644;&#35206;&#30422;&#29575;&#25910;&#38598;&#65292;&#20197;&#30830;&#20445;&#26426;&#22120;&#23398;&#20064;&#26694;&#26550;&#30340;&#23433;&#20840;&#24615;&#21644;&#21487;&#38752;&#24615;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#30830;&#20445;&#26426;&#22120;&#23398;&#20064;&#26694;&#26550;&#30340;&#23433;&#20840;&#24615;&#21644;&#21487;&#38752;&#24615;&#23545;&#20110;&#26500;&#24314;&#21487;&#20449;&#36182;&#30340;&#22522;&#20110;&#20154;&#24037;&#26234;&#33021;&#30340;&#31995;&#32479;&#33267;&#20851;&#37325;&#35201;&#12290;&#27169;&#31946;&#27979;&#35797;&#26159;&#23433;&#20840;&#36719;&#20214;&#24320;&#21457;&#29983;&#21629;&#21608;&#26399;&#65288;SSDLC&#65289;&#20013;&#19968;&#31181;&#27969;&#34892;&#30340;&#25216;&#26415;&#65292;&#21487;&#29992;&#20110;&#24320;&#21457;&#23433;&#20840;&#21644;&#20581;&#22766;&#30340;&#36719;&#20214;&#12290;&#25105;&#20204;&#25552;&#20986;&#20102;&#20351;&#29992;Sydr-Fuzz&#24037;&#20855;&#38598;&#38024;&#23545;Python&#39033;&#30446;&#30340;&#21160;&#24577;&#20998;&#26512;&#31649;&#36947;&#12290;&#25105;&#20204;&#30340;&#31649;&#36947;&#21253;&#25324;&#27169;&#31946;&#27979;&#35797;&#12289;&#35821;&#26009;&#24211;&#26368;&#23567;&#21270;&#12289;&#23849;&#28291;&#20998;&#31867;&#21644;&#35206;&#30422;&#29575;&#25910;&#38598;&#12290;&#23849;&#28291;&#20998;&#31867;&#21644;&#20005;&#37325;&#24615;&#35780;&#20272;&#26159;&#30830;&#20445;&#21450;&#26102;&#35299;&#20915;&#26368;&#20851;&#38190;&#28431;&#27934;&#30340;&#37325;&#35201;&#27493;&#39588;&#12290;&#27492;&#22806;&#65292;&#25152;&#25552;&#20986;&#30340;&#31649;&#36947;&#38598;&#25104;&#22312;GitLab CI&#20013;&#12290;&#20026;&#20102;&#30830;&#23450;&#26426;&#22120;&#23398;&#20064;&#26694;&#26550;&#20013;&#26368;&#26131;&#21463;&#25915;&#20987;&#30340;&#37096;&#20998;&#65292;&#25105;&#20204;&#20998;&#26512;&#23427;&#20204;&#28508;&#22312;&#30340;&#25915;&#20987;&#38754;&#65292;&#24182;&#20026;PyTorch&#12289;TensorFlow&#24320;&#21457;&#27169;&#31946;&#27979;&#35797;&#30446;&#26631;&#12290;
&lt;/p&gt;
&lt;p&gt;
arXiv:2403.12723v1 Announce Type: cross  Abstract: Ensuring the security and reliability of machine learning frameworks is crucial for building trustworthy AI-based systems. Fuzzing, a popular technique in secure software development lifecycle (SSDLC), can be used to develop secure and robust software. Popular machine learning frameworks such as PyTorch and TensorFlow are complex and written in multiple programming languages including C/C++ and Python. We propose a dynamic analysis pipeline for Python projects using the Sydr-Fuzz toolset. Our pipeline includes fuzzing, corpus minimization, crash triaging, and coverage collection. Crash triaging and severity estimation are important steps to ensure that the most critical vulnerabilities are addressed promptly. Furthermore, the proposed pipeline is integrated in GitLab CI. To identify the most vulnerable parts of the machine learning frameworks, we analyze their potential attack surfaces and develop fuzz targets for PyTorch, TensorFlow, 
&lt;/p&gt;</description></item></channel></rss>