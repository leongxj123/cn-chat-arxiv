<rss version="2.0"><channel><title>Chat Arxiv cs.RO</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.RO</description><item><title>&#36890;&#36807;&#23450;&#20041;"&#20219;&#21153;"&#30340;&#26041;&#24335;&#21644;&#24341;&#20837;&#20855;&#26377;&#29289;&#29702;&#21644;&#22240;&#26524;&#20851;&#31995;&#29702;&#35299;&#30340;&#30417;&#30563;&#27169;&#22359;&#65292;&#25105;&#20204;&#25552;&#20986;&#20102;&#19968;&#31181;&#20855;&#26377;&#22266;&#26377;&#29289;&#29702;&#30693;&#35782;&#30340;&#31283;&#24577;&#36816;&#21160;&#35268;&#21010;&#26694;&#26550;&#65292;&#21487;&#20197;&#22312;&#26426;&#22120;&#20154;&#19978;&#23454;&#29616;&#22797;&#26434;&#35745;&#21010;&#12290;</title><link>https://arxiv.org/abs/2402.15384</link><description>&lt;p&gt;
&#20855;&#26377;&#22266;&#26377;&#29289;&#29702;&#30693;&#35782;&#30340;&#31283;&#24577;&#36816;&#21160;&#35268;&#21010;
&lt;/p&gt;
&lt;p&gt;
Homeostatic motion planning with innate physics knowledge
&lt;/p&gt;
&lt;p&gt;
https://arxiv.org/abs/2402.15384
&lt;/p&gt;
&lt;p&gt;
&#36890;&#36807;&#23450;&#20041;"&#20219;&#21153;"&#30340;&#26041;&#24335;&#21644;&#24341;&#20837;&#20855;&#26377;&#29289;&#29702;&#21644;&#22240;&#26524;&#20851;&#31995;&#29702;&#35299;&#30340;&#30417;&#30563;&#27169;&#22359;&#65292;&#25105;&#20204;&#25552;&#20986;&#20102;&#19968;&#31181;&#20855;&#26377;&#22266;&#26377;&#29289;&#29702;&#30693;&#35782;&#30340;&#31283;&#24577;&#36816;&#21160;&#35268;&#21010;&#26694;&#26550;&#65292;&#21487;&#20197;&#22312;&#26426;&#22120;&#20154;&#19978;&#23454;&#29616;&#22797;&#26434;&#35745;&#21010;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#29983;&#29289;&#20307;&#20197;&#38381;&#29615;&#26041;&#24335;&#19982;&#21608;&#22260;&#29615;&#22659;&#36827;&#34892;&#20114;&#21160;&#65292;&#20854;&#20013;&#24863;&#23448;&#36755;&#20837;&#20915;&#23450;&#34892;&#20026;&#30340;&#21551;&#21160;&#21644;&#32456;&#27490;&#12290;&#21363;&#20351;&#26159;&#31616;&#21333;&#30340;&#21160;&#29289;&#20063;&#33021;&#21046;&#23450;&#24182;&#25191;&#34892;&#22797;&#26434;&#35745;&#21010;&#65292;&#20294;&#32431;&#38381;&#29615;&#36755;&#20837;&#25511;&#21046;&#30340;&#26426;&#22120;&#20154;&#23578;&#26410;&#22797;&#21046;&#36825;&#19968;&#28857;&#12290;&#25105;&#20204;&#25552;&#20986;&#36890;&#36807;&#23450;&#20041;&#19968;&#32452;&#31163;&#25955;&#20020;&#26102;&#38381;&#29615;&#25511;&#21046;&#22120;&#65292;&#31216;&#20026;&#8220;&#20219;&#21153;&#8221;&#65292;&#27599;&#20010;&#20219;&#21153;&#20195;&#34920;&#19968;&#20010;&#38381;&#29615;&#34892;&#20026;&#65292;&#26469;&#35299;&#20915;&#36825;&#20010;&#38382;&#39064;&#12290;&#25105;&#20204;&#36827;&#19968;&#27493;&#24341;&#20837;&#20102;&#19968;&#20010;&#20855;&#26377;&#22266;&#26377;&#29289;&#29702;&#21644;&#22240;&#26524;&#20851;&#31995;&#29702;&#35299;&#30340;&#30417;&#30563;&#27169;&#22359;&#65292;&#36890;&#36807;&#35813;&#27169;&#22359;&#21487;&#20197;&#27169;&#25311;&#38543;&#26102;&#38388;&#25191;&#34892;&#20219;&#21153;&#24207;&#21015;&#24182;&#23558;&#32467;&#26524;&#23384;&#20648;&#22312;&#29615;&#22659;&#27169;&#22411;&#20013;&#12290;&#22522;&#20110;&#36825;&#20010;&#27169;&#22411;&#65292;&#21487;&#20197;&#36890;&#36807;&#38142;&#25509;&#20020;&#26102;&#38381;&#29615;&#25511;&#21046;&#22120;&#36827;&#34892;&#21046;&#23450;&#35745;&#21010;&#12290;&#25152;&#25552;&#20986;&#30340;&#26694;&#26550;&#24050;&#22312;&#23454;&#38469;&#26426;&#22120;&#20154;&#20013;&#23454;&#26045;&#65292;&#24182;&#22312;&#20004;&#31181;&#22330;&#26223;&#19979;&#20316;&#20026;&#27010;&#24565;&#39564;&#35777;&#36827;&#34892;&#20102;&#27979;&#35797;&#12290;
&lt;/p&gt;
&lt;p&gt;
arXiv:2402.15384v1 Announce Type: cross  Abstract: Living organisms interact with their surroundings in a closed-loop fashion, where sensory inputs dictate the initiation and termination of behaviours. Even simple animals are able to develop and execute complex plans, which has not yet been replicated in robotics using pure closed-loop input control. We propose a solution to this problem by defining a set of discrete and temporary closed-loop controllers, called "tasks", each representing a closed-loop behaviour. We further introduce a supervisory module which has an innate understanding of physics and causality, through which it can simulate the execution of task sequences over time and store the results in a model of the environment. On the basis of this model, plans can be made by chaining temporary closed-loop controllers. The proposed framework was implemented for a real robot and tested in two scenarios as proof of concept.
&lt;/p&gt;</description></item></channel></rss>