<rss version="2.0"><channel><title>Chat Arxiv cs.PF</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.PF</description><item><title>AutoChunk&#26159;&#19968;&#31181;&#33258;&#21160;&#21644;&#33258;&#36866;&#24212;&#30340;&#32534;&#35793;&#22120;&#31995;&#32479;&#65292;&#36890;&#36807;&#22359;&#31574;&#30053;&#26377;&#25928;&#22320;&#20943;&#23569;&#38271;&#24207;&#21015;&#25512;&#26029;&#30340;&#28608;&#27963;&#20869;&#23384;&#12290;</title><link>http://arxiv.org/abs/2401.10652</link><description>&lt;p&gt;
AutoChunk: &#33258;&#21160;&#28608;&#27963;&#22359;&#29992;&#20110;&#20869;&#23384;&#39640;&#25928;&#30340;&#38271;&#24207;&#21015;&#25512;&#26029;
&lt;/p&gt;
&lt;p&gt;
AutoChunk: Automated Activation Chunk for Memory-Efficient Long Sequence Inference. (arXiv:2401.10652v1 [cs.PF])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2401.10652
&lt;/p&gt;
&lt;p&gt;
AutoChunk&#26159;&#19968;&#31181;&#33258;&#21160;&#21644;&#33258;&#36866;&#24212;&#30340;&#32534;&#35793;&#22120;&#31995;&#32479;&#65292;&#36890;&#36807;&#22359;&#31574;&#30053;&#26377;&#25928;&#22320;&#20943;&#23569;&#38271;&#24207;&#21015;&#25512;&#26029;&#30340;&#28608;&#27963;&#20869;&#23384;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#22823;&#22411;&#28145;&#24230;&#23398;&#20064;&#27169;&#22411;&#22312;&#21508;&#31181;&#24212;&#29992;&#20013;&#21462;&#24471;&#20102;&#20196;&#20154;&#30633;&#30446;&#30340;&#24615;&#33021;&#12290;&#28982;&#32780;&#65292;&#23427;&#20204;&#23545;&#20869;&#23384;&#30340;&#22823;&#37327;&#38656;&#27714;&#65292;&#21253;&#25324;&#21442;&#25968;&#20869;&#23384;&#21644;&#28608;&#27963;&#20869;&#23384;&#65292;&#24050;&#32463;&#25104;&#20026;&#23454;&#38469;&#24212;&#29992;&#20013;&#30340;&#37325;&#22823;&#25361;&#25112;&#12290;&#29616;&#26377;&#26041;&#27861;&#20027;&#35201;&#22788;&#29702;&#21442;&#25968;&#20869;&#23384;&#65292;&#23545;&#28608;&#27963;&#20869;&#23384;&#30340;&#37325;&#35201;&#24615;&#21364;&#34987;&#24573;&#35270;&#20102;&#12290;&#29305;&#21035;&#26159;&#23545;&#20110;&#38271;&#36755;&#20837;&#24207;&#21015;&#65292;&#38543;&#30528;&#24207;&#21015;&#38271;&#24230;&#30340;&#22686;&#21152;&#65292;&#28608;&#27963;&#20869;&#23384;&#39044;&#35745;&#20250;&#32463;&#21382;&#26174;&#33879;&#30340;&#25351;&#25968;&#22686;&#38271;&#12290;&#22312;&#36825;&#20010;&#26041;&#27861;&#20013;&#65292;&#25105;&#20204;&#25552;&#20986;&#20102;AutoChunk&#65292;&#19968;&#31181;&#33258;&#21160;&#21644;&#33258;&#36866;&#24212;&#30340;&#32534;&#35793;&#22120;&#31995;&#32479;&#65292;&#36890;&#36807;&#22359;&#31574;&#30053;&#26377;&#25928;&#22320;&#20943;&#23569;&#38271;&#24207;&#21015;&#25512;&#26029;&#30340;&#28608;&#27963;&#20869;&#23384;&#12290;&#25152;&#25552;&#20986;&#30340;&#31995;&#32479;&#36890;&#36807;&#22810;&#20010;&#38454;&#27573;&#30340;&#20248;&#21270;&#29983;&#25104;&#22359;&#35745;&#21010;&#12290;&#22312;&#27599;&#20010;&#38454;&#27573;&#65292;&#22359;&#25628;&#32034;&#36890;&#36807;&#25506;&#32034;&#25152;&#26377;&#21487;&#33021;&#30340;&#22359;&#20505;&#36873;&#39033;&#65292;&#22359;&#36873;&#25321;&#36890;&#36807;&#35782;&#21035;&#26368;&#20339;&#22359;&#36827;&#34892;&#12290;&#36816;&#34892;&#26102;&#65292;AutoChunk&#37319;&#29992;&#20195;&#30721;&#29983;&#25104;&#33258;&#21160;&#24212;&#29992;&#22359;&#31574;&#30053;&#12290;
&lt;/p&gt;
&lt;p&gt;
Large deep learning models have achieved impressive performance across a range of applications. However, their large memory requirements, including parameter memory and activation memory, have become a significant challenge for their practical serving. While existing methods mainly address parameter memory, the importance of activation memory has been overlooked. Especially for long input sequences, activation memory is expected to experience a significant exponential growth as the length of sequences increases. In this approach, we propose AutoChunk, an automatic and adaptive compiler system that efficiently reduces activation memory for long sequence inference by chunk strategies. The proposed system generates chunk plans by optimizing through multiple stages. In each stage, the chunk search pass explores all possible chunk candidates and the chunk selection pass identifies the optimal one. At runtime, AutoChunk employs code generation to automatically apply chunk strategies. The exp
&lt;/p&gt;</description></item></channel></rss>