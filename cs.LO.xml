<rss version="2.0"><channel><title>Chat Arxiv cs.LO</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.LO</description><item><title>&#26412;&#30740;&#31350;&#25552;&#20986;&#20102;&#19968;&#31181;&#22312;&#39640;&#32500;&#31354;&#38388;&#20013;&#36827;&#34892;&#21487;&#24494;&#24402;&#32435;&#36923;&#36753;&#32534;&#31243;&#30340;&#25193;&#23637;&#26041;&#27861;&#65292;&#36890;&#36807;&#22823;&#35268;&#27169;&#35859;&#35789;&#21457;&#26126;&#26469;&#20805;&#20998;&#21033;&#29992;&#39640;&#32500;&#26799;&#24230;&#19979;&#38477;&#30340;&#25928;&#33021;&#65292;&#20197;&#23398;&#20064;&#36229;&#20986;&#29616;&#26377;&#31070;&#32463;&#31526;&#21495;ILP&#31995;&#32479;&#33021;&#21147;&#30340;&#20219;&#21153;&#30340;&#35299;&#20915;&#26041;&#26696;&#12290;</title><link>http://arxiv.org/abs/2208.06652</link><description>&lt;p&gt;
&#39640;&#32500;&#31354;&#38388;&#20013;&#21487;&#24494;&#24402;&#32435;&#36923;&#36753;&#32534;&#31243;
&lt;/p&gt;
&lt;p&gt;
Differentiable Inductive Logic Programming in High-Dimensional Space. (arXiv:2208.06652v2 [cs.AI] UPDATED)
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2208.06652
&lt;/p&gt;
&lt;p&gt;
&#26412;&#30740;&#31350;&#25552;&#20986;&#20102;&#19968;&#31181;&#22312;&#39640;&#32500;&#31354;&#38388;&#20013;&#36827;&#34892;&#21487;&#24494;&#24402;&#32435;&#36923;&#36753;&#32534;&#31243;&#30340;&#25193;&#23637;&#26041;&#27861;&#65292;&#36890;&#36807;&#22823;&#35268;&#27169;&#35859;&#35789;&#21457;&#26126;&#26469;&#20805;&#20998;&#21033;&#29992;&#39640;&#32500;&#26799;&#24230;&#19979;&#38477;&#30340;&#25928;&#33021;&#65292;&#20197;&#23398;&#20064;&#36229;&#20986;&#29616;&#26377;&#31070;&#32463;&#31526;&#21495;ILP&#31995;&#32479;&#33021;&#21147;&#30340;&#20219;&#21153;&#30340;&#35299;&#20915;&#26041;&#26696;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#36890;&#36807;&#31526;&#21495;&#24402;&#32435;&#36923;&#36753;&#32534;&#31243;&#65288;ILP&#65289;&#21512;&#25104;&#22823;&#22411;&#36923;&#36753;&#31243;&#24207;&#36890;&#24120;&#38656;&#35201;&#20013;&#38388;&#23450;&#20041;&#12290;&#28982;&#32780;&#65292;&#20351;&#29992;&#20869;&#28085;&#35859;&#35789;&#26434;&#20081;&#22320;&#21344;&#25454;&#20551;&#35774;&#31354;&#38388;&#36890;&#24120;&#20250;&#38477;&#20302;&#24615;&#33021;&#12290;&#30456;&#21453;&#65292;&#26799;&#24230;&#19979;&#38477;&#25552;&#20379;&#20102;&#22312;&#36825;&#20123;&#39640;&#32500;&#31354;&#38388;&#20013;&#23547;&#25214;&#35299;&#20915;&#26041;&#26696;&#30340;&#26377;&#25928;&#26041;&#27861;&#12290;&#21040;&#30446;&#21069;&#20026;&#27490;&#65292;&#31070;&#32463;&#31526;&#21495;ILP&#26041;&#27861;&#24182;&#27809;&#26377;&#20805;&#20998;&#21033;&#29992;&#36825;&#19968;&#28857;&#12290;&#25105;&#20204;&#25552;&#20986;&#25193;&#23637;{\delta}ILP&#26041;&#27861;&#65292;&#20197;&#36827;&#34892;&#22823;&#35268;&#27169;&#35859;&#35789;&#21457;&#26126;&#30340;&#24402;&#32435;&#21512;&#25104;&#65292;&#20174;&#32780;&#20801;&#35768;&#25105;&#20204;&#21033;&#29992;&#39640;&#32500;&#26799;&#24230;&#19979;&#38477;&#30340;&#25928;&#33021;&#12290;&#25105;&#20204;&#23637;&#31034;&#20102;&#22823;&#35268;&#27169;&#35859;&#35789;&#21457;&#26126;&#36890;&#36807;&#26799;&#24230;&#19979;&#38477;&#21463;&#30410;&#20110;&#21487;&#24494;&#24402;&#32435;&#21512;&#25104;&#65292;&#24182;&#20801;&#35768;&#25105;&#20204;&#23398;&#20064;&#36229;&#20986;&#29616;&#26377;&#31070;&#32463;&#31526;&#21495;ILP&#31995;&#32479;&#33021;&#21147;&#30340;&#20219;&#21153;&#30340;&#35299;&#20915;&#26041;&#26696;&#12290;&#27492;&#22806;&#65292;&#25105;&#20204;&#22312;&#19981;&#25351;&#23450;&#35299;&#20915;&#26041;&#26696;&#30340;&#31934;&#30830;&#32467;&#26500;&#30340;&#35821;&#35328;&#20559;&#24046;&#30340;&#24773;&#20917;&#19979;&#23454;&#29616;&#20102;&#36825;&#20123;&#32467;&#26524;&#12290;
&lt;/p&gt;
&lt;p&gt;
Synthesizing large logic programs through symbolic Inductive Logic Programming (ILP) typically requires intermediate definitions. However, cluttering the hypothesis space with intensional predicates typically degrades performance. In contrast, gradient descent provides an efficient way to find solutions within such high- dimensional spaces. Neuro-symbolic ILP approaches have not fully exploited this so far. We propose extending the {\delta}ILP approach to inductive synthesis with large-scale predicate invention, thus allowing us to exploit the efficacy of high-dimensional gradient descent. We show that large-scale predicate invention benefits differentiable inductive synthesis through gradient descent and allows one to learn solutions for tasks beyond the capabilities of existing neuro-symbolic ILP systems. Furthermore, we achieve these results without specifying the precise structure of the solution within the language bias.
&lt;/p&gt;</description></item></channel></rss>