<rss version="2.0"><channel><title>Chat Arxiv cs.LO</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.LO</description><item><title>&#26412;&#31687;&#35770;&#25991;&#25552;&#20986;&#20102;&#19968;&#32452;&#26032;&#30340;&#26102;&#38388;&#36923;&#36753;&#65292;&#36890;&#36807;&#20351;&#29992;Krohn&#21644;Rhodes&#30340;&#32423;&#32852;&#29702;&#35770;&#65292;&#25193;&#23637;&#20102;&#36807;&#21435;&#30340;LTL&#34920;&#36798;&#33021;&#21147;&#65292;&#20854;&#20013;&#21253;&#25324;&#21487;&#20197;&#25429;&#33719;&#20854;&#20182;prime automata&#30340;&#26032;&#30340;&#26102;&#38388;&#36816;&#31639;&#31526;&#12290;</title><link>http://arxiv.org/abs/2304.09639</link><description>&lt;p&gt;
Krohn-Rhodes&#36923;&#36753;
&lt;/p&gt;
&lt;p&gt;
The Krohn-Rhodes Logics. (arXiv:2304.09639v1 [cs.LO])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2304.09639
&lt;/p&gt;
&lt;p&gt;
&#26412;&#31687;&#35770;&#25991;&#25552;&#20986;&#20102;&#19968;&#32452;&#26032;&#30340;&#26102;&#38388;&#36923;&#36753;&#65292;&#36890;&#36807;&#20351;&#29992;Krohn&#21644;Rhodes&#30340;&#32423;&#32852;&#29702;&#35770;&#65292;&#25193;&#23637;&#20102;&#36807;&#21435;&#30340;LTL&#34920;&#36798;&#33021;&#21147;&#65292;&#20854;&#20013;&#21253;&#25324;&#21487;&#20197;&#25429;&#33719;&#20854;&#20182;prime automata&#30340;&#26032;&#30340;&#26102;&#38388;&#36816;&#31639;&#31526;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#25105;&#20204;&#25552;&#20986;&#20102;&#19968;&#32452;&#26032;&#30340;&#36807;&#21435;&#30340;&#27169;&#24577;&#26102;&#38388;&#36923;&#36753;&#65292;&#36890;&#36807;&#20351;&#29992;Krohn&#21644;Rhodes&#30340;&#33258;&#21160;&#26426;&#32423;&#32852;&#29702;&#35770;&#65292;&#22522;&#20110;Past LTL&#25193;&#23637;&#19968;&#32452;&#20016;&#23500;&#30340;&#26102;&#38388;&#36816;&#31639;&#31526;&#32780;&#33719;&#24471;&#12290;&#35813;&#29702;&#35770;&#25351;&#20986;&#65292;&#27599;&#20010;&#33258;&#21160;&#26426;&#37117;&#21487;&#20197;&#34920;&#31034;&#20026;&#19968;&#20123;&#31216;&#20026;prime automata&#30340;&#22522;&#26412;&#33258;&#21160;&#26426;&#30340;&#32423;&#32852;&#12290;&#20182;&#20204;&#26159;&#25152;&#26377;&#33258;&#21160;&#26426;&#30340;&#26500;&#24314;&#22359;&#65292;&#31867;&#20284;&#20110;&#36136;&#25968;&#26159;&#25152;&#26377;&#33258;&#28982;&#25968;&#30340;&#26500;&#24314;&#22359;&#12290;&#25105;&#20204;&#23637;&#31034;&#20102;&#36807;&#21435;&#30340;LTL&#23545;&#24212;&#20110;&#31216;&#20026;flip-flops&#30340;&#19968;&#31181;prime automata&#30340;&#32423;&#32852;&#12290;&#29305;&#21035;&#22320;&#65292;Past LTL&#30340;&#26102;&#38388;&#36816;&#31639;&#31526;&#30001;flip-flops&#25429;&#33719;&#65292;&#24182;&#19988;&#23427;&#20204;&#19981;&#33021;&#25429;&#33719;&#20219;&#20309;&#20854;&#20182;prime automata&#65292;&#23558;&#34920;&#36798;&#33021;&#21147;&#38480;&#21046;&#22312;&#26143;&#21495;&#33258;&#30001;&#27491;&#21017;&#35821;&#35328;&#20869;&#12290;&#25105;&#20204;&#25552;&#20986;&#20102;&#26032;&#30340;&#26102;&#38388;&#36816;&#31639;&#31526;&#65292;&#21487;&#20197;&#25429;&#33719;&#20854;&#20182;prime automata&#65292;&#20174;&#32780;&#25193;&#23637;&#20102;Past LTL&#30340;&#34920;&#36798;&#33021;&#21147;&#12290;&#36825;&#20123;&#36816;&#31639;&#31526;&#26159;&#26080;&#31351;&#22810;&#30340;&#65292;&#24182;&#19988;&#23427;&#20204;&#20135;&#29983;&#20102;&#26080;&#38480;&#25968;&#37327;&#30340;&#36923;&#36753;&#65292;&#25429;&#33719;&#20102;&#27491;&#21017;&#35821;&#35328;&#30340;&#26080;&#38480;&#25968;&#37327;&#30340;&#19981;&#21516;&#29255;&#27573;&#12290;
&lt;/p&gt;
&lt;p&gt;
We present a new family of modal temporal logics of the past, obtained by extending Past LTL with a rich set of temporal operators based on the theory by Krohn and Rhodes for automata cascades. The theory says that every automaton can be expressed as a cascade of some basic automata called prime automata. They are the building blocks of all automata, analogously to prime numbers being the building blocks of all natural numbers. We show that Past LTL corresponds to cascades of one kind of prime automata called flip-flops. In particular, the temporal operators of Past LTL are captured by flip-flops, and they cannot capture any other prime automaton, confining the expressivity within the star-free regular languages. We propose novel temporal operators that can capture other prime automata, and hence extend the expressivity of Past LTL. Such operators are infinitely-many, and they yield an infinite number of logics capturing an infinite number of distinct fragments of the regular languages
&lt;/p&gt;</description></item></channel></rss>