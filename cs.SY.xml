<rss version="2.0"><channel><title>Chat Arxiv cs.SY</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.SY</description><item><title>&#26412;&#25991;&#25552;&#20986;&#20102;&#19968;&#31181;&#22522;&#20110;&#21452;&#28145;&#24230;Q&#23398;&#20064;&#30340;&#32531;&#23384;&#26041;&#27861;&#65292;&#36890;&#36807;&#21322;&#39532;&#23572;&#21487;&#22827;&#20915;&#31574;&#36807;&#31243;&#65288;SMDP&#65289;&#36866;&#24212;&#29616;&#23454;&#22330;&#26223;&#20013;&#38543;&#26426;&#35831;&#27714;&#21040;&#36798;&#30340;&#29305;&#24615;&#65292;&#32508;&#21512;&#32771;&#34385;&#21508;&#31181;&#25991;&#20214;&#29305;&#24449;&#12290;</title><link>https://arxiv.org/abs/2402.14576</link><description>&lt;p&gt;
&#22522;&#20110;&#28145;&#24230;&#24378;&#21270;&#23398;&#20064;&#21644;&#36801;&#31227;&#23398;&#20064;&#30340;&#36793;&#32536;&#32531;&#23384;
&lt;/p&gt;
&lt;p&gt;
Edge Caching Based on Deep Reinforcement Learning and Transfer Learning
&lt;/p&gt;
&lt;p&gt;
https://arxiv.org/abs/2402.14576
&lt;/p&gt;
&lt;p&gt;
&#26412;&#25991;&#25552;&#20986;&#20102;&#19968;&#31181;&#22522;&#20110;&#21452;&#28145;&#24230;Q&#23398;&#20064;&#30340;&#32531;&#23384;&#26041;&#27861;&#65292;&#36890;&#36807;&#21322;&#39532;&#23572;&#21487;&#22827;&#20915;&#31574;&#36807;&#31243;&#65288;SMDP&#65289;&#36866;&#24212;&#29616;&#23454;&#22330;&#26223;&#20013;&#38543;&#26426;&#35831;&#27714;&#21040;&#36798;&#30340;&#29305;&#24615;&#65292;&#32508;&#21512;&#32771;&#34385;&#21508;&#31181;&#25991;&#20214;&#29305;&#24449;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#26412;&#25991;&#35752;&#35770;&#20102;&#32593;&#32476;&#20013;&#20887;&#20313;&#25968;&#25454;&#20256;&#36755;&#26085;&#30410;&#25361;&#25112;&#30340;&#38382;&#39064;&#12290;&#27969;&#37327;&#28608;&#22686;&#24050;&#32463;&#20351;&#20013;&#32487;&#38142;&#36335;&#21644;&#39592;&#24178;&#32593;&#32476;&#25215;&#21387;&#65292;&#20419;&#20351;&#23545;&#36793;&#32536;&#36335;&#30001;&#22120;&#30340;&#32531;&#23384;&#35299;&#20915;&#26041;&#26696;&#36827;&#34892;&#25506;&#32034;&#12290;&#29616;&#26377;&#24037;&#20316;&#20027;&#35201;&#20381;&#36182;&#20110;&#39532;&#23572;&#21487;&#22827;&#20915;&#31574;&#36807;&#31243;&#65288;MDP&#65289;&#22788;&#29702;&#32531;&#23384;&#38382;&#39064;&#65292;&#20551;&#35774;&#22266;&#23450;&#26102;&#38388;&#38388;&#38548;&#30340;&#20915;&#31574;&#65307;&#28982;&#32780;&#65292;&#29616;&#23454;&#22330;&#26223;&#28041;&#21450;&#38543;&#26426;&#35831;&#27714;&#21040;&#36798;&#65292;&#23613;&#31649;&#21508;&#31181;&#25991;&#20214;&#29305;&#24449;&#22312;&#30830;&#23450;&#26368;&#20339;&#32531;&#23384;&#31574;&#30053;&#26041;&#38754;&#36215;&#30528;&#33267;&#20851;&#37325;&#35201;&#30340;&#20316;&#29992;&#65292;&#20294;&#30456;&#20851;&#30340;&#29616;&#26377;&#24037;&#20316;&#24182;&#26410;&#32771;&#34385;&#25152;&#26377;&#36825;&#20123;&#25991;&#20214;&#29305;&#24449;&#26469;&#24418;&#25104;&#32531;&#23384;&#31574;&#30053;&#12290;&#22312;&#26412;&#25991;&#20013;&#65292;&#39318;&#20808;&#25105;&#20204;&#21033;&#29992;&#21322;&#39532;&#23572;&#21487;&#22827;&#20915;&#31574;&#36807;&#31243;&#65288;SMDP&#65289;&#26469;&#24314;&#27169;&#32531;&#23384;&#38382;&#39064;&#65292;&#20197;&#36866;&#24212;&#29616;&#23454;&#22330;&#26223;&#30340;&#36830;&#32493;&#26102;&#38388;&#29305;&#24615;&#65292;&#20801;&#35768;&#22312;&#25991;&#20214;&#35831;&#27714;&#26102;&#38543;&#26426;&#36827;&#34892;&#32531;&#23384;&#20915;&#31574;&#12290;&#28982;&#21518;&#65292;&#25105;&#20204;&#25552;&#20986;&#20102;&#19968;&#31181;&#22522;&#20110;&#21452;&#28145;&#24230;Q&#23398;&#20064;&#30340;&#32531;&#23384;&#26041;&#27861;&#65292;&#20840;&#38754;&#32771;&#34385;&#20102;&#19981;&#21516;&#25991;&#20214;&#29305;&#24449;&#30340;&#24433;&#21709;&#12290;
&lt;/p&gt;
&lt;p&gt;
arXiv:2402.14576v1 Announce Type: cross  Abstract: This paper addresses the escalating challenge of redundant data transmission in networks. The surge in traffic has strained backhaul links and backbone networks, prompting the exploration of caching solutions at the edge router. Existing work primarily relies on Markov Decision Processes (MDP) for caching issues, assuming fixed-time interval decisions; however, real-world scenarios involve random request arrivals, and despite the critical role of various file characteristics in determining an optimal caching policy, none of the related existing work considers all these file characteristics in forming a caching policy. In this paper, first, we formulate the caching problem using a semi-Markov Decision Process (SMDP) to accommodate the continuous-time nature of real-world scenarios allowing for caching decisions at random times upon file requests. Then, we propose a double deep Q-learning-based caching approach that comprehensively accou
&lt;/p&gt;</description></item></channel></rss>