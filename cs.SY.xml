<rss version="2.0"><channel><title>Chat Arxiv cs.SY</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.SY</description><item><title>&#35813;&#35770;&#25991;&#20171;&#32461;&#20102;&#19968;&#31181;&#29992;&#20110;&#26234;&#33021;&#33258;&#21160;&#32553;&#25918;&#26080;&#26381;&#21153;&#22120;&#20989;&#25968;&#30340;&#28145;&#24230;&#24490;&#29615;&#24378;&#21270;&#23398;&#20064;&#26041;&#27861;&#65292;&#38024;&#23545;&#27874;&#21160;&#30340;&#24037;&#20316;&#36127;&#36733;&#21644;&#20005;&#26684;&#30340;&#24615;&#33021;&#32422;&#26463;&#65292;&#36890;&#36807;&#24314;&#31435;&#19968;&#20010;&#36866;&#24212;&#24615;&#31574;&#30053;&#26469;&#23454;&#29616;&#26368;&#22823;&#21270;&#26399;&#26395;&#30446;&#26631;&#12290;</title><link>http://arxiv.org/abs/2308.05937</link><description>&lt;p&gt;
&#19968;&#31181;&#29992;&#20110;&#26234;&#33021;&#33258;&#21160;&#32553;&#25918;&#26080;&#26381;&#21153;&#22120;&#20989;&#25968;&#30340;&#28145;&#24230;&#24490;&#29615;&#24378;&#21270;&#23398;&#20064;&#26041;&#27861;
&lt;/p&gt;
&lt;p&gt;
A Deep Recurrent-Reinforcement Learning Method for Intelligent AutoScaling of Serverless Functions. (arXiv:2308.05937v1 [cs.DC])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2308.05937
&lt;/p&gt;
&lt;p&gt;
&#35813;&#35770;&#25991;&#20171;&#32461;&#20102;&#19968;&#31181;&#29992;&#20110;&#26234;&#33021;&#33258;&#21160;&#32553;&#25918;&#26080;&#26381;&#21153;&#22120;&#20989;&#25968;&#30340;&#28145;&#24230;&#24490;&#29615;&#24378;&#21270;&#23398;&#20064;&#26041;&#27861;&#65292;&#38024;&#23545;&#27874;&#21160;&#30340;&#24037;&#20316;&#36127;&#36733;&#21644;&#20005;&#26684;&#30340;&#24615;&#33021;&#32422;&#26463;&#65292;&#36890;&#36807;&#24314;&#31435;&#19968;&#20010;&#36866;&#24212;&#24615;&#31574;&#30053;&#26469;&#23454;&#29616;&#26368;&#22823;&#21270;&#26399;&#26395;&#30446;&#26631;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#20989;&#25968;&#21363;&#26381;&#21153;&#65288;FaaS&#65289;&#24341;&#20837;&#20102;&#19968;&#31181;&#36731;&#37327;&#32423;&#30340;&#22522;&#20110;&#20989;&#25968;&#30340;&#20113;&#25191;&#34892;&#27169;&#22411;&#65292;&#22312;&#29289;&#32852;&#32593;&#36793;&#32536;&#25968;&#25454;&#22788;&#29702;&#21644;&#24322;&#24120;&#26816;&#27979;&#31561;&#24212;&#29992;&#20013;&#20855;&#26377;&#30456;&#20851;&#24615;&#12290;&#34429;&#28982;&#20113;&#26381;&#21153;&#25552;&#20379;&#21830;&#25552;&#20379;&#20102;&#20960;&#20046;&#26080;&#38480;&#30340;&#20989;&#25968;&#24377;&#24615;&#65292;&#20294;&#36825;&#20123;&#24212;&#29992;&#32463;&#24120;&#36935;&#21040;&#27874;&#21160;&#30340;&#24037;&#20316;&#36127;&#36733;&#21644;&#26356;&#20005;&#26684;&#30340;&#24615;&#33021;&#32422;&#26463;&#12290;&#20856;&#22411;&#30340;&#20113;&#26381;&#21153;&#25552;&#20379;&#21830;&#31574;&#30053;&#26159;&#26681;&#25454;&#22522;&#20110;&#30417;&#25511;&#30340;&#38408;&#20540;&#65288;&#22914;CPU&#25110;&#20869;&#23384;&#65289;&#26469;&#32463;&#39564;&#24615;&#22320;&#30830;&#23450;&#21644;&#35843;&#25972;&#25152;&#38656;&#30340;&#20989;&#25968;&#23454;&#20363;&#20197;&#36866;&#24212;&#38656;&#27714;&#21644;&#24615;&#33021;&#65292;&#21363;"&#33258;&#21160;&#32553;&#25918;"&#12290;&#28982;&#32780;&#65292;&#38408;&#20540;&#37197;&#32622;&#35201;&#20040;&#38656;&#35201;&#19987;&#23478;&#30693;&#35782;&#65292;&#35201;&#20040;&#38656;&#35201;&#21382;&#21490;&#25968;&#25454;&#25110;&#23545;&#29615;&#22659;&#30340;&#23436;&#25972;&#35270;&#22270;&#65292;&#20351;&#24471;&#33258;&#21160;&#32553;&#25918;&#25104;&#20026;&#32570;&#20047;&#36866;&#24212;&#24615;&#35299;&#20915;&#26041;&#26696;&#30340;&#24615;&#33021;&#29942;&#39048;&#12290;&#24378;&#21270;&#23398;&#20064;&#31639;&#27861;&#24050;&#34987;&#35777;&#26126;&#22312;&#20998;&#26512;&#22797;&#26434;&#30340;&#20113;&#29615;&#22659;&#20013;&#26159;&#26377;&#30410;&#30340;&#65292;&#24182;&#20135;&#29983;&#36866;&#24212;&#24615;&#31574;&#30053;&#20197;&#26368;&#22823;&#21270;&#26399;&#26395;&#30446;&#26631;&#12290;
&lt;/p&gt;
&lt;p&gt;
Function-as-a-Service (FaaS) introduces a lightweight, function-based cloud execution model that finds its relevance in applications like IoT-edge data processing and anomaly detection. While CSP offer a near-infinite function elasticity, these applications often experience fluctuating workloads and stricter performance constraints. A typical CSP strategy is to empirically determine and adjust desired function instances, "autoscaling", based on monitoring-based thresholds such as CPU or memory, to cope with demand and performance. However, threshold configuration either requires expert knowledge, historical data or a complete view of environment, making autoscaling a performance bottleneck lacking an adaptable solution.RL algorithms are proven to be beneficial in analysing complex cloud environments and result in an adaptable policy that maximizes the expected objectives. Most realistic cloud environments usually involve operational interference and have limited visibility, making them
&lt;/p&gt;</description></item></channel></rss>