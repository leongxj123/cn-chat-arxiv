<rss version="2.0"><channel><title>Chat Arxiv cs.SY</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.SY</description><item><title>DASA&#31639;&#27861;&#26159;&#31532;&#19968;&#20010;&#25910;&#25947;&#36895;&#24230;&#20165;&#20381;&#36182;&#20110;&#28151;&#21512;&#26102;&#38388;&#21644;&#24179;&#22343;&#24310;&#36831;&#30340;&#31639;&#27861;&#65292;&#21516;&#26102;&#22312;&#39532;&#23572;&#31185;&#22827;&#37319;&#26679;&#19979;&#23454;&#29616;N&#20493;&#30340;&#25910;&#25947;&#21152;&#36895;&#12290;</title><link>https://arxiv.org/abs/2403.17247</link><description>&lt;p&gt;
DASA: &#24310;&#36831;&#33258;&#36866;&#24212;&#22810;&#26234;&#33021;&#20307;&#38543;&#26426;&#36924;&#36817;
&lt;/p&gt;
&lt;p&gt;
DASA: Delay-Adaptive Multi-Agent Stochastic Approximation
&lt;/p&gt;
&lt;p&gt;
https://arxiv.org/abs/2403.17247
&lt;/p&gt;
&lt;p&gt;
DASA&#31639;&#27861;&#26159;&#31532;&#19968;&#20010;&#25910;&#25947;&#36895;&#24230;&#20165;&#20381;&#36182;&#20110;&#28151;&#21512;&#26102;&#38388;&#21644;&#24179;&#22343;&#24310;&#36831;&#30340;&#31639;&#27861;&#65292;&#21516;&#26102;&#22312;&#39532;&#23572;&#31185;&#22827;&#37319;&#26679;&#19979;&#23454;&#29616;N&#20493;&#30340;&#25910;&#25947;&#21152;&#36895;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#25105;&#20204;&#32771;&#34385;&#19968;&#31181;&#35774;&#32622;&#65292;&#20854;&#20013;$N$&#20010;&#26234;&#33021;&#20307;&#26088;&#22312;&#36890;&#36807;&#24182;&#34892;&#25805;&#20316;&#24182;&#19982;&#20013;&#22830;&#26381;&#21153;&#22120;&#36890;&#20449;&#26469;&#21152;&#36895;&#19968;&#20010;&#24120;&#35265;&#30340;&#38543;&#26426;&#36924;&#36817;&#65288;SA&#65289;&#38382;&#39064;&#12290;&#25105;&#20204;&#20551;&#23450;&#19978;&#34892;&#20256;&#36755;&#21040;&#26381;&#21153;&#22120;&#30340;&#20256;&#36755;&#21463;&#21040;&#24322;&#27493;&#21644;&#28508;&#22312;&#26080;&#30028;&#26102;&#21464;&#24310;&#36831;&#30340;&#24433;&#21709;&#12290;&#20026;&#20102;&#20943;&#36731;&#24310;&#36831;&#21644;&#33853;&#21518;&#32773;&#30340;&#24433;&#21709;&#65292;&#21516;&#26102;&#21448;&#33021;&#33719;&#24471;&#20998;&#24067;&#24335;&#35745;&#31639;&#30340;&#22909;&#22788;&#65292;&#25105;&#20204;&#25552;&#20986;&#20102;&#19968;&#31181;&#21517;&#20026;DASA&#30340;&#24310;&#36831;&#33258;&#36866;&#24212;&#22810;&#26234;&#33021;&#20307;&#38543;&#26426;&#36924;&#36817;&#31639;&#27861;&#12290;&#25105;&#20204;&#23545;DASA&#36827;&#34892;&#20102;&#26377;&#38480;&#26102;&#38388;&#20998;&#26512;&#65292;&#20551;&#35774;&#26234;&#33021;&#20307;&#30340;&#38543;&#26426;&#35266;&#27979;&#36807;&#31243;&#26159;&#29420;&#31435;&#39532;&#23572;&#31185;&#22827;&#38142;&#12290;&#19982;&#29616;&#26377;&#32467;&#26524;&#30456;&#27604;&#65292;DASA&#26159;&#31532;&#19968;&#20010;&#20854;&#25910;&#25947;&#36895;&#24230;&#20165;&#21462;&#20915;&#20110;&#28151;&#21512;&#26102;&#38388;$tmix$&#21644;&#24179;&#22343;&#24310;&#36831;$\tau_{avg}$&#65292;&#21516;&#26102;&#22312;&#39532;&#23572;&#31185;&#22827;&#37319;&#26679;&#19979;&#23454;&#29616;N&#20493;&#30340;&#25910;&#25947;&#21152;&#36895;&#30340;&#31639;&#27861;&#12290;&#25105;&#20204;&#30340;&#24037;&#20316;&#23545;&#20110;&#21508;&#31181;SA&#24212;&#29992;&#26159;&#30456;&#20851;&#30340;&#12290;
&lt;/p&gt;
&lt;p&gt;
arXiv:2403.17247v1 Announce Type: new  Abstract: We consider a setting in which $N$ agents aim to speedup a common Stochastic Approximation (SA) problem by acting in parallel and communicating with a central server. We assume that the up-link transmissions to the server are subject to asynchronous and potentially unbounded time-varying delays. To mitigate the effect of delays and stragglers while reaping the benefits of distributed computation, we propose \texttt{DASA}, a Delay-Adaptive algorithm for multi-agent Stochastic Approximation. We provide a finite-time analysis of \texttt{DASA} assuming that the agents' stochastic observation processes are independent Markov chains. Significantly advancing existing results, \texttt{DASA} is the first algorithm whose convergence rate depends only on the mixing time $\tmix$ and on the average delay $\tau_{avg}$ while jointly achieving an $N$-fold convergence speedup under Markovian sampling. Our work is relevant for various SA applications, inc
&lt;/p&gt;</description></item><item><title>&#36825;&#31687;&#35770;&#25991;&#30740;&#31350;&#20102;&#22312;&#36895;&#29575;&#38480;&#21046;&#36890;&#36947;&#19978;&#23454;&#29616;&#27169;&#22411;&#26080;&#20851;&#30340;LQR&#25511;&#21046;&#30340;&#38382;&#39064;&#12290;&#36890;&#36807;&#24341;&#20837;&#33258;&#36866;&#24212;&#37327;&#21270;&#26799;&#24230;&#19979;&#38477;&#65288;AQGD&#65289;&#31639;&#27861;&#65292;&#20316;&#32773;&#35777;&#26126;&#20102;&#22312;&#22122;&#22768;&#30005;&#36335;&#20013;&#21487;&#20197;&#23454;&#29616;&#25511;&#21046;&#38382;&#39064;&#30340;&#35299;&#20915;&#12290;</title><link>http://arxiv.org/abs/2401.01258</link><description>&lt;p&gt;
&#23454;&#29616;&#27169;&#22411;&#26080;&#20851;&#30340;&#36890;&#36807;&#36895;&#29575;&#38480;&#21046;&#36890;&#36947;&#30340;LQR&#25511;&#21046;
&lt;/p&gt;
&lt;p&gt;
Towards Model-Free LQR Control over Rate-Limited Channels. (arXiv:2401.01258v1 [math.OC])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2401.01258
&lt;/p&gt;
&lt;p&gt;
&#36825;&#31687;&#35770;&#25991;&#30740;&#31350;&#20102;&#22312;&#36895;&#29575;&#38480;&#21046;&#36890;&#36947;&#19978;&#23454;&#29616;&#27169;&#22411;&#26080;&#20851;&#30340;LQR&#25511;&#21046;&#30340;&#38382;&#39064;&#12290;&#36890;&#36807;&#24341;&#20837;&#33258;&#36866;&#24212;&#37327;&#21270;&#26799;&#24230;&#19979;&#38477;&#65288;AQGD&#65289;&#31639;&#27861;&#65292;&#20316;&#32773;&#35777;&#26126;&#20102;&#22312;&#22122;&#22768;&#30005;&#36335;&#20013;&#21487;&#20197;&#23454;&#29616;&#25511;&#21046;&#38382;&#39064;&#30340;&#35299;&#20915;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#37492;&#20110;&#27169;&#22411;&#26080;&#20851;&#26041;&#27861;&#22312;&#35768;&#22810;&#38382;&#39064;&#35774;&#32622;&#20013;&#30340;&#25511;&#21046;&#35774;&#35745;&#26041;&#38754;&#21462;&#24471;&#30340;&#25104;&#21151;&#65292;&#33258;&#28982;&#32780;&#28982;&#22320;&#20250;&#38382;&#65292;&#22914;&#26524;&#21033;&#29992;&#23454;&#38469;&#30340;&#36890;&#20449;&#36890;&#36947;&#26469;&#20256;&#36755;&#26799;&#24230;&#25110;&#31574;&#30053;&#65292;&#24773;&#20917;&#20250;&#22914;&#20309;&#25913;&#21464;&#12290;&#23613;&#31649;&#30001;&#27492;&#20135;&#29983;&#30340;&#38382;&#39064;&#19982;&#32593;&#32476;&#25511;&#21046;&#31995;&#32479;&#20013;&#30740;&#31350;&#30340;&#20844;&#24335;&#26377;&#31867;&#20284;&#20043;&#22788;&#65292;&#20294;&#37027;&#20010;&#39046;&#22495;&#30340;&#20016;&#23500;&#25991;&#29486;&#36890;&#24120;&#20551;&#23450;&#31995;&#32479;&#30340;&#27169;&#22411;&#26159;&#24050;&#30693;&#30340;&#12290;&#20026;&#20102;&#22312;&#27169;&#22411;&#26080;&#20851;&#25511;&#21046;&#35774;&#35745;&#21644;&#32593;&#32476;&#25511;&#21046;&#31995;&#32479;&#39046;&#22495;&#20043;&#38388;&#24314;&#31435;&#32852;&#31995;&#65292;&#25105;&#20204;&#25552;&#20986;&#20102;&#19968;&#20010;&#38382;&#39064;&#65306;\textit{&#26159;&#21542;&#21487;&#20197;&#36890;&#36807;&#36895;&#29575;&#38480;&#21046;&#30340;&#36890;&#36947;&#20197;&#27169;&#22411;&#26080;&#20851;&#30340;&#26041;&#24335;&#35299;&#20915;&#22522;&#26412;&#30340;&#25511;&#21046;&#38382;&#39064;-&#20363;&#22914;&#32447;&#24615;&#20108;&#27425;&#35843;&#33410;&#22120;&#65288;LQR&#65289;&#38382;&#39064;&#65311;}&#20026;&#20102;&#22238;&#31572;&#36825;&#20010;&#38382;&#39064;&#65292;&#25105;&#20204;&#30740;&#31350;&#20102;&#19968;&#20010;&#35774;&#32622;&#65292;&#20854;&#20013;&#19968;&#20010;&#24037;&#20316;&#20195;&#29702;&#36890;&#36807;&#19968;&#20010;&#26080;&#22122;&#22768;&#20449;&#36947;&#20197;&#26377;&#38480;&#30340;&#20301;&#36895;&#29575;&#20256;&#36755;&#37327;&#21270;&#31574;&#30053;&#26799;&#24230;&#65288;LQR&#25104;&#26412;&#65289;&#21040;&#19968;&#20010;&#26381;&#21153;&#22120;&#12290;&#25105;&#20204;&#25552;&#20986;&#20102;&#19968;&#31181;&#21517;&#20026;&#33258;&#36866;&#24212;&#37327;&#21270;&#26799;&#24230;&#19979;&#38477;&#65288;AQGD&#65289;&#30340;&#26032;&#31639;&#27861;&#65292;&#24182;&#35777;&#26126;&#20102;
&lt;/p&gt;
&lt;p&gt;
Given the success of model-free methods for control design in many problem settings, it is natural to ask how things will change if realistic communication channels are utilized for the transmission of gradients or policies. While the resulting problem has analogies with the formulations studied under the rubric of networked control systems, the rich literature in that area has typically assumed that the model of the system is known. As a step towards bridging the fields of model-free control design and networked control systems, we ask: \textit{Is it possible to solve basic control problems - such as the linear quadratic regulator (LQR) problem - in a model-free manner over a rate-limited channel?} Toward answering this question, we study a setting where a worker agent transmits quantized policy gradients (of the LQR cost) to a server over a noiseless channel with a finite bit-rate. We propose a new algorithm titled Adaptively Quantized Gradient Descent (\texttt{AQGD}), and prove that
&lt;/p&gt;</description></item><item><title>&#26412;&#25991;&#25552;&#20986;&#20102;&#19968;&#31181;&#26080;&#30417;&#30563;&#30340;&#22522;&#20110;&#22270;&#30340;&#23398;&#20064;&#26041;&#27861;&#65292;&#29992;&#20110;&#22312;6G&#23376;&#32593;&#32476;&#20013;&#36827;&#34892;&#23376;&#39057;&#24102;&#20998;&#37197;&#12290;&#35813;&#26041;&#27861;&#36890;&#36807;&#20248;&#21270;&#20351;&#29992;&#22270;&#31070;&#32463;&#32593;&#32476;&#30340;&#23376;&#39057;&#24102;&#20998;&#37197;&#65292;&#23454;&#29616;&#20102;&#19982;&#38598;&#20013;&#24335;&#36138;&#23146;&#30528;&#33394;&#23376;&#39057;&#24102;&#20998;&#37197;&#26041;&#27861;&#30456;&#36817;&#30340;&#24615;&#33021;&#65292;&#24182;&#19988;&#20855;&#26377;&#26356;&#20302;&#30340;&#35745;&#31639;&#26102;&#38388;&#22797;&#26434;&#24230;&#21644;&#36739;&#23567;&#30340;&#20449;&#20196;&#24320;&#38144;&#12290;</title><link>http://arxiv.org/abs/2401.00950</link><description>&lt;p&gt;
&#26080;&#30417;&#30563;&#30340;&#22522;&#20110;&#22270;&#30340;&#23398;&#20064;&#26041;&#27861;&#29992;&#20110;6G&#23376;&#32593;&#32476;&#30340;&#23376;&#39057;&#24102;&#20998;&#37197;
&lt;/p&gt;
&lt;p&gt;
Unsupervised Graph-based Learning Method for Sub-band Allocation in 6G Subnetworks. (arXiv:2401.00950v1 [cs.NI])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2401.00950
&lt;/p&gt;
&lt;p&gt;
&#26412;&#25991;&#25552;&#20986;&#20102;&#19968;&#31181;&#26080;&#30417;&#30563;&#30340;&#22522;&#20110;&#22270;&#30340;&#23398;&#20064;&#26041;&#27861;&#65292;&#29992;&#20110;&#22312;6G&#23376;&#32593;&#32476;&#20013;&#36827;&#34892;&#23376;&#39057;&#24102;&#20998;&#37197;&#12290;&#35813;&#26041;&#27861;&#36890;&#36807;&#20248;&#21270;&#20351;&#29992;&#22270;&#31070;&#32463;&#32593;&#32476;&#30340;&#23376;&#39057;&#24102;&#20998;&#37197;&#65292;&#23454;&#29616;&#20102;&#19982;&#38598;&#20013;&#24335;&#36138;&#23146;&#30528;&#33394;&#23376;&#39057;&#24102;&#20998;&#37197;&#26041;&#27861;&#30456;&#36817;&#30340;&#24615;&#33021;&#65292;&#24182;&#19988;&#20855;&#26377;&#26356;&#20302;&#30340;&#35745;&#31639;&#26102;&#38388;&#22797;&#26434;&#24230;&#21644;&#36739;&#23567;&#30340;&#20449;&#20196;&#24320;&#38144;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#22312;&#26412;&#25991;&#20013;&#65292;&#25105;&#20204;&#25552;&#20986;&#20102;&#19968;&#31181;&#26080;&#30417;&#30563;&#30340;&#22522;&#20110;&#22270;&#30340;&#23398;&#20064;&#26041;&#27861;&#65292;&#29992;&#20110;&#22312;&#26080;&#32447;&#32593;&#32476;&#20013;&#36827;&#34892;&#39057;&#29575;&#23376;&#24102;&#20998;&#37197;&#12290;&#25105;&#20204;&#32771;&#34385;&#22312;&#24037;&#21378;&#29615;&#22659;&#20013;&#23494;&#38598;&#37096;&#32626;&#30340;&#23376;&#32593;&#32476;&#65292;&#36825;&#20123;&#23376;&#32593;&#32476;&#21482;&#26377;&#26377;&#38480;&#25968;&#37327;&#30340;&#23376;&#39057;&#24102;&#65292;&#24517;&#39035;&#34987;&#20248;&#21270;&#22320;&#20998;&#37197;&#20197;&#21327;&#35843;&#23376;&#32593;&#32476;&#38388;&#30340;&#24178;&#25200;&#12290;&#25105;&#20204;&#23558;&#23376;&#32593;&#32476;&#37096;&#32626;&#24314;&#27169;&#20026;&#19968;&#20010;&#20914;&#31361;&#22270;&#65292;&#24182;&#25552;&#20986;&#20102;&#19968;&#31181;&#21463;&#21040;&#22270;&#30528;&#33394;&#21551;&#21457;&#21644;Potts&#27169;&#22411;&#30340;&#26080;&#30417;&#30563;&#23398;&#20064;&#26041;&#27861;&#65292;&#21033;&#29992;&#22270;&#31070;&#32463;&#32593;&#32476;&#26469;&#20248;&#21270;&#23376;&#39057;&#24102;&#20998;&#37197;&#12290;&#25968;&#20540;&#35780;&#20272;&#34920;&#26126;&#65292;&#25152;&#25552;&#20986;&#30340;&#26041;&#27861;&#22312;&#36739;&#20302;&#30340;&#35745;&#31639;&#26102;&#38388;&#22797;&#26434;&#24230;&#19979;&#65292;&#23454;&#29616;&#20102;&#19982;&#38598;&#20013;&#24335;&#36138;&#23146;&#30528;&#33394;&#23376;&#39057;&#24102;&#20998;&#37197;&#21551;&#21457;&#24335;&#26041;&#27861;&#25509;&#36817;&#30340;&#24615;&#33021;&#12290;&#27492;&#22806;&#65292;&#19982;&#38656;&#35201;&#25152;&#26377;&#20114;&#30456;&#24178;&#25200;&#30340;&#20449;&#36947;&#20449;&#24687;&#30340;&#36845;&#20195;&#20248;&#21270;&#21551;&#21457;&#24335;&#30456;&#27604;&#65292;&#23427;&#20135;&#29983;&#26356;&#23569;&#30340;&#20449;&#20196;&#24320;&#38144;&#12290;&#25105;&#20204;&#36827;&#19968;&#27493;&#35777;&#26126;&#35813;&#26041;&#27861;&#23545;&#19981;&#21516;&#30340;&#32593;&#32476;&#35774;&#32622;&#20855;&#26377;&#20581;&#22766;&#24615;&#12290;
&lt;/p&gt;
&lt;p&gt;
In this paper, we present an unsupervised approach for frequency sub-band allocation in wireless networks using graph-based learning. We consider a dense deployment of subnetworks in the factory environment with a limited number of sub-bands which must be optimally allocated to coordinate inter-subnetwork interference. We model the subnetwork deployment as a conflict graph and propose an unsupervised learning approach inspired by the graph colouring heuristic and the Potts model to optimize the sub-band allocation using graph neural networks. The numerical evaluation shows that the proposed method achieves close performance to the centralized greedy colouring sub-band allocation heuristic with lower computational time complexity. In addition, it incurs reduced signalling overhead compared to iterative optimization heuristics that require all the mutual interfering channel information. We further demonstrate that the method is robust to different network settings.
&lt;/p&gt;</description></item></channel></rss>