<rss version="2.0"><channel><title>Chat Arxiv cs.IT</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.IT</description><item><title>&#26412;&#25991;&#25552;&#20986;&#20102;Product Autoencoder&#26469;&#36890;&#36807;&#21487;&#31649;&#29702;&#30340;&#35757;&#32451;&#22797;&#26434;&#24615;&#23454;&#29616;&#30456;&#23545;&#36739;&#22823;&#30340;&#20195;&#30721;&#30340;&#35757;&#32451;&#12290;</title><link>http://arxiv.org/abs/2303.16424</link><description>&lt;p&gt;
ProductAE&#65306;&#38754;&#21521;&#22823;&#32500;&#25968;&#30340;&#28145;&#24230;&#23398;&#20064;&#39537;&#21160;&#32416;&#38169;&#30721;&#35774;&#35745;
&lt;/p&gt;
&lt;p&gt;
ProductAE: Toward Deep Learning Driven Error-Correction Codes of Large Dimensions. (arXiv:2303.16424v1 [cs.IT])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2303.16424
&lt;/p&gt;
&lt;p&gt;
&#26412;&#25991;&#25552;&#20986;&#20102;Product Autoencoder&#26469;&#36890;&#36807;&#21487;&#31649;&#29702;&#30340;&#35757;&#32451;&#22797;&#26434;&#24615;&#23454;&#29616;&#30456;&#23545;&#36739;&#22823;&#30340;&#20195;&#30721;&#30340;&#35757;&#32451;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#23613;&#31649;&#20960;&#21313;&#24180;&#30340;&#29702;&#35770;&#30740;&#31350;&#24050;&#32463;&#21457;&#26126;&#20102;&#20960;&#20010;&#32416;&#38169;&#30721;&#31867;&#21035;&#65292;&#20294;&#36825;&#20123;&#30721;&#30340;&#35774;&#35745;&#21364;&#26159;&#19968;&#39033;&#26497;&#20855;&#25361;&#25112;&#24615;&#30340;&#20219;&#21153;&#65292;&#20027;&#35201;&#20381;&#38752;&#20154;&#31867;&#26234;&#24935;&#12290;&#26368;&#36817;&#30340;&#30740;&#31350;&#34920;&#26126;&#65292;&#36825;&#26679;&#30340;&#35774;&#35745;&#21487;&#20197;&#36890;&#36807;&#26426;&#22120;&#23398;&#20064;&#65288;ML&#65289;&#24037;&#20855;&#26377;&#25928;&#22320;&#33258;&#21160;&#21270;&#21644;&#21152;&#36895;&#65292;&#20174;&#32780;&#23454;&#29616;&#19982;&#32463;&#20856;&#35774;&#35745;&#30456;&#27604;&#20855;&#26377;&#33391;&#22909;&#24615;&#33021;&#22686;&#30410;&#30340;ML&#39537;&#21160;&#30340;&#32416;&#38169;&#30721;&#31867;&#21035;&#12290;&#28982;&#32780;&#65292;&#19968;&#20010;&#26681;&#26412;&#24615;&#30340;&#25361;&#25112;&#26159;&#65292;&#23545;&#20110;&#22823;&#30721;&#32500;&#24230;&#26469;&#35828;&#65292;&#35774;&#35745;&#21644;&#35757;&#32451;&#23436;&#20840;&#30340;ML&#39537;&#21160;&#30340;&#32534;&#30721;&#22120;&#21644;&#35299;&#30721;&#22120;&#23545;&#26469;&#35828;&#26159;&#38750;&#24120;&#22797;&#26434;&#30340;&#65292;&#22914;&#26524;&#19981;&#26159;&#19981;&#21487;&#33021;&#30340;&#30340;&#35805;&#12290;&#22312;&#26412;&#25991;&#20013;&#65292;&#25105;&#20204;&#25552;&#20986;&#20102;Product Autoencoder&#65288;ProductAE&#65289;-&#19968;&#31181;&#35745;&#31639;&#25928;&#29575;&#39640;&#30340;&#28145;&#24230;&#23398;&#20064;&#39537;&#21160;&#65288;&#32534;&#30721;&#22120;&#65292;&#35299;&#30721;&#22120;&#65289;&#23545;&#30340;&#31995;&#21015;-&#26088;&#22312;&#36890;&#36807;&#21487;&#31649;&#29702;&#30340;&#35757;&#32451;&#22797;&#26434;&#24615;&#23454;&#29616;&#30456;&#23545;&#36739;&#22823;&#30340;&#20195;&#30721;&#65288;&#32534;&#30721;&#22120;&#21644;&#35299;&#30721;&#22120;&#65289;&#30340;&#35757;&#32451;&#12290;&#25105;&#20204;&#20511;&#37492;&#20102;&#32463;&#20856;&#20056;&#31215;&#30721;&#30340;&#24605;&#24819;&#65292;&#24182;&#25552;&#20986;&#20102;&#20351;&#29992;ProductAE&#26500;&#24314;&#22823;&#22411;&#31070;&#32463;&#32593;&#32476;&#30340;&#32534;&#30721;&#25216;&#26415;&#12290;
&lt;/p&gt;
&lt;p&gt;
While decades of theoretical research have led to the invention of several classes of error-correction codes, the design of such codes is an extremely challenging task, mostly driven by human ingenuity. Recent studies demonstrate that such designs can be effectively automated and accelerated via tools from machine learning (ML), thus enabling ML-driven classes of error-correction codes with promising performance gains compared to classical designs. A fundamental challenge, however, is that it is prohibitively complex, if not impossible, to design and train fully ML-driven encoder and decoder pairs for large code dimensions. In this paper, we propose Product Autoencoder (ProductAE) -- a computationally-efficient family of deep learning driven (encoder, decoder) pairs -- aimed at enabling the training of relatively large codes (both encoder and decoder) with a manageable training complexity. We build upon ideas from classical product codes and propose constructing large neural codes usin
&lt;/p&gt;</description></item></channel></rss>