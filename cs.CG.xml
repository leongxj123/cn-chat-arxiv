<rss version="2.0"><channel><title>Chat Arxiv cs.CG</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.CG</description><item><title>&#26412;&#35770;&#25991;&#36890;&#36807;&#22810;&#20132;&#25442;$k$-Means++&#31639;&#27861;&#30340;&#25913;&#36827;&#21644;&#25193;&#23637;&#65292;&#25552;&#20986;&#20102;&#19968;&#31181;&#22312;$k$-means&#32858;&#31867;&#38382;&#39064;&#20013;&#33021;&#22815;&#33719;&#24471;$9 + \varepsilon$&#36817;&#20284;&#27604;&#30340;&#23616;&#37096;&#25628;&#32034;&#31639;&#27861;&#65292;&#24182;&#35777;&#26126;&#20102;&#35813;&#31639;&#27861;&#22312;&#23454;&#38469;&#20013;&#21462;&#24471;&#20102;&#26174;&#33879;&#30340;&#36136;&#37327;&#25913;&#36827;&#12290;</title><link>http://arxiv.org/abs/2309.16384</link><description>&lt;p&gt;
&#22810;&#20132;&#25442;$k$-Means++&#31639;&#27861;
&lt;/p&gt;
&lt;p&gt;
Multi-Swap $k$-Means++. (arXiv:2309.16384v1 [cs.CG])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2309.16384
&lt;/p&gt;
&lt;p&gt;
&#26412;&#35770;&#25991;&#36890;&#36807;&#22810;&#20132;&#25442;$k$-Means++&#31639;&#27861;&#30340;&#25913;&#36827;&#21644;&#25193;&#23637;&#65292;&#25552;&#20986;&#20102;&#19968;&#31181;&#22312;$k$-means&#32858;&#31867;&#38382;&#39064;&#20013;&#33021;&#22815;&#33719;&#24471;$9 + \varepsilon$&#36817;&#20284;&#27604;&#30340;&#23616;&#37096;&#25628;&#32034;&#31639;&#27861;&#65292;&#24182;&#35777;&#26126;&#20102;&#35813;&#31639;&#27861;&#22312;&#23454;&#38469;&#20013;&#21462;&#24471;&#20102;&#26174;&#33879;&#30340;&#36136;&#37327;&#25913;&#36827;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
Arthur&#21644;Vassilvitskii&#25552;&#20986;&#30340;$k$-means++&#31639;&#27861;&#36890;&#24120;&#34987;&#23454;&#36341;&#32773;&#36873;&#25321;&#29992;&#20110;&#20248;&#21270;&#27969;&#34892;&#30340;$k$-means&#32858;&#31867;&#30446;&#26631;&#65292;&#24182;&#22312;&#26399;&#26395;&#20013;&#33719;&#24471;$O(\log k)$&#30340;&#36817;&#20284;&#24230;&#12290;&#20026;&#20102;&#33719;&#24471;&#26356;&#39640;&#36136;&#37327;&#30340;&#35299;&#65292;Lattanzi&#21644;Sohler&#25552;&#20986;&#20102;&#36890;&#36807;$k$-means++&#37319;&#26679;&#20998;&#24067;&#33719;&#24471;&#30340;$O(k \log \log k)$&#20010;&#23616;&#37096;&#25628;&#32034;&#27493;&#39588;&#30340;&#22686;&#24378;$k$-means++&#31639;&#27861;&#65292;&#20174;&#32780;&#24471;&#21040;$k$-means&#32858;&#31867;&#38382;&#39064;&#30340;$c$&#36817;&#20284;&#35299;&#65292;&#20854;&#20013;$c$&#26159;&#19968;&#20010;&#36739;&#22823;&#30340;&#24120;&#25968;&#12290;&#22312;&#36825;&#37324;&#65292;&#25105;&#20204;&#36890;&#36807;&#32771;&#34385;&#26356;&#22823;&#26356;&#22797;&#26434;&#30340;&#23616;&#37096;&#25628;&#32034;&#37051;&#22495;&#26469;&#25512;&#24191;&#21644;&#25193;&#23637;&#20182;&#20204;&#30340;&#23616;&#37096;&#25628;&#32034;&#31639;&#27861;&#65292;&#20174;&#32780;&#21487;&#20197;&#21516;&#26102;&#20132;&#25442;&#22810;&#20010;&#20013;&#24515;&#12290;&#25105;&#20204;&#30340;&#31639;&#27861;&#23454;&#29616;&#20102;$9 + \varepsilon$&#30340;&#36817;&#20284;&#27604;&#65292;&#36825;&#26159;&#23616;&#37096;&#25628;&#32034;&#21487;&#33021;&#30340;&#26368;&#20339;&#32467;&#26524;&#12290;&#37325;&#35201;&#30340;&#26159;&#65292;&#25105;&#20204;&#35777;&#26126;&#20102;&#25105;&#20204;&#30340;&#26041;&#27861;&#22312;&#23454;&#38469;&#20013;&#21462;&#24471;&#20102;&#23454;&#36136;&#24615;&#30340;&#25913;&#36827;&#65292;&#25105;&#20204;&#26174;&#31034;&#20986;&#19982;Lattanzi&#21644;Sohler&#30340;&#26041;&#27861;&#30456;&#27604;&#30340;&#26174;&#33879;&#36136;&#37327;&#25913;&#36827;&#12290;
&lt;/p&gt;
&lt;p&gt;
The $k$-means++ algorithm of Arthur and Vassilvitskii (SODA 2007) is often the practitioners' choice algorithm for optimizing the popular $k$-means clustering objective and is known to give an $O(\log k)$-approximation in expectation. To obtain higher quality solutions, Lattanzi and Sohler (ICML 2019) proposed augmenting $k$-means++ with $O(k \log \log k)$ local search steps obtained through the $k$-means++ sampling distribution to yield a $c$-approximation to the $k$-means clustering problem, where $c$ is a large absolute constant. Here we generalize and extend their local search algorithm by considering larger and more sophisticated local search neighborhoods hence allowing to swap multiple centers at the same time. Our algorithm achieves a $9 + \varepsilon$ approximation ratio, which is the best possible for local search. Importantly we show that our approach yields substantial practical improvements, we show significant quality improvements over the approach of Lattanzi and Sohler 
&lt;/p&gt;</description></item></channel></rss>