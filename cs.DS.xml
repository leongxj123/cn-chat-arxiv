<rss version="2.0"><channel><title>Chat Arxiv cs.DS</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.DS</description><item><title>&#36825;&#20010;&#35770;&#25991;&#25552;&#20986;&#20102;&#19968;&#20010;&#37327;&#23376;&#36924;&#36817;&#26041;&#26696;&#65292;&#29992;&#20110;&#35299;&#20915;&#32463;&#20856;&#30340;k-Means&#32858;&#31867;&#38382;&#39064;&#65292;&#35813;&#26041;&#26696;&#30340;&#36816;&#34892;&#26102;&#38388;&#19982;&#25968;&#25454;&#28857;&#30340;&#25968;&#37327;&#20855;&#26377;&#22810;&#23545;&#25968;&#20381;&#36182;&#20851;&#31995;&#65292;&#24182;&#19988;&#33021;&#22815;&#22312;&#39640;&#27010;&#29575;&#19979;&#36755;&#20986;&#19968;&#20010;&#36817;&#20284;&#26368;&#20248;&#35299;&#65292;&#36825;&#26159;&#31532;&#19968;&#20010;&#20855;&#26377;&#22810;&#23545;&#25968;&#36816;&#34892;&#26102;&#38388;&#30340;&#37327;&#23376;&#31639;&#27861;&#65292;&#24182;&#19988;&#33021;&#22815;&#25552;&#20379;&#19968;&#20010;&#21487;&#35777;&#26126;&#30340;&#36924;&#36817;&#20445;&#35777;&#12290;</title><link>http://arxiv.org/abs/2308.08167</link><description>&lt;p&gt;
&#19968;&#20010;&#29992;&#20110;k-Means&#30340;&#37327;&#23376;&#36924;&#36817;&#26041;&#26696;
&lt;/p&gt;
&lt;p&gt;
A Quantum Approximation Scheme for k-Means. (arXiv:2308.08167v1 [quant-ph])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2308.08167
&lt;/p&gt;
&lt;p&gt;
&#36825;&#20010;&#35770;&#25991;&#25552;&#20986;&#20102;&#19968;&#20010;&#37327;&#23376;&#36924;&#36817;&#26041;&#26696;&#65292;&#29992;&#20110;&#35299;&#20915;&#32463;&#20856;&#30340;k-Means&#32858;&#31867;&#38382;&#39064;&#65292;&#35813;&#26041;&#26696;&#30340;&#36816;&#34892;&#26102;&#38388;&#19982;&#25968;&#25454;&#28857;&#30340;&#25968;&#37327;&#20855;&#26377;&#22810;&#23545;&#25968;&#20381;&#36182;&#20851;&#31995;&#65292;&#24182;&#19988;&#33021;&#22815;&#22312;&#39640;&#27010;&#29575;&#19979;&#36755;&#20986;&#19968;&#20010;&#36817;&#20284;&#26368;&#20248;&#35299;&#65292;&#36825;&#26159;&#31532;&#19968;&#20010;&#20855;&#26377;&#22810;&#23545;&#25968;&#36816;&#34892;&#26102;&#38388;&#30340;&#37327;&#23376;&#31639;&#27861;&#65292;&#24182;&#19988;&#33021;&#22815;&#25552;&#20379;&#19968;&#20010;&#21487;&#35777;&#26126;&#30340;&#36924;&#36817;&#20445;&#35777;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#25105;&#20204;&#22312;QRAM&#27169;&#22411;&#20013;&#25552;&#20379;&#20102;&#19968;&#20010;&#37327;&#23376;&#36924;&#36817;&#26041;&#26696;&#65288;&#21363;&#23545;&#20110;&#20219;&#24847;&#949; &gt; 0, &#37117;&#26159; (1 + &#949;)-&#36924;&#36817;&#65289;&#65292;&#29992;&#20110;&#32463;&#20856;&#30340;k-Means&#32858;&#31867;&#38382;&#39064;&#65292;&#20854;&#36816;&#34892;&#26102;&#38388;&#20165;&#19982;&#25968;&#25454;&#28857;&#30340;&#25968;&#37327;&#20855;&#26377;&#22810;&#23545;&#25968;&#20381;&#36182;&#20851;&#31995;&#12290;&#20855;&#20307;&#32780;&#35328;&#65292;&#32473;&#23450;&#19968;&#20010;&#22312;QRAM&#25968;&#25454;&#32467;&#26500;&#20013;&#23384;&#20648;&#30340;&#20855;&#26377;N&#20010;&#28857;&#30340;&#25968;&#25454;&#38598;V&#65292;&#36825;&#20010;&#37327;&#23376;&#31639;&#27861;&#30340;&#36816;&#34892;&#26102;&#38388;&#20026;O&#771;(2^(O&#771;(k/&#949;))&#951;^2d)&#65292;&#24182;&#19988;&#20197;&#39640;&#27010;&#29575;&#36755;&#20986;&#19968;&#20010;&#21253;&#21547;k&#20010;&#20013;&#24515;&#30340;&#38598;&#21512;C&#65292;&#28385;&#36275;cost(V, C) &#8804; (1+&#949;) &#183; cost(V, C_OPT)&#12290;&#36825;&#37324;C_OPT&#34920;&#31034;&#26368;&#20248;&#30340;k&#20010;&#20013;&#24515;&#65292;cost(.)&#34920;&#31034;&#26631;&#20934;&#30340;k-Means&#20195;&#20215;&#20989;&#25968;&#65288;&#21363;&#28857;&#21040;&#26368;&#36817;&#20013;&#24515;&#30340;&#24179;&#26041;&#36317;&#31163;&#20043;&#21644;&#65289;&#65292;&#32780;&#951;&#26159;&#32437;&#27178;&#27604;&#65288;&#21363;&#26368;&#36828;&#36317;&#31163;&#19982;&#26368;&#36817;&#36317;&#31163;&#30340;&#27604;&#20540;&#65289;&#12290;&#36825;&#26159;&#31532;&#19968;&#20010;&#20855;&#26377;&#22810;&#23545;&#25968;&#36816;&#34892;&#26102;&#38388;&#30340;&#37327;&#23376;&#31639;&#27861;&#65292;&#24182;&#19988;&#33021;&#22815;&#25552;&#20379;&#19968;&#20010;&#21487;&#35777;&#26126;&#30340;(1+&#949;)&#36924;&#36817;&#20445;&#35777;&#12290;
&lt;/p&gt;
&lt;p&gt;
We give a quantum approximation scheme (i.e., $(1 + \varepsilon)$-approximation for every $\varepsilon &gt; 0$) for the classical $k$-means clustering problem in the QRAM model with a running time that has only polylogarithmic dependence on the number of data points. More specifically, given a dataset $V$ with $N$ points in $\mathbb{R}^d$ stored in QRAM data structure, our quantum algorithm runs in time $\tilde{O} \left( 2^{\tilde{O}(\frac{k}{\varepsilon})} \eta^2 d\right)$ and with high probability outputs a set $C$ of $k$ centers such that $cost(V, C) \leq (1+\varepsilon) \cdot cost(V, C_{OPT})$. Here $C_{OPT}$ denotes the optimal $k$-centers, $cost(.)$ denotes the standard $k$-means cost function (i.e., the sum of the squared distance of points to the closest center), and $\eta$ is the aspect ratio (i.e., the ratio of maximum distance to minimum distance). This is the first quantum algorithm with a polylogarithmic running time that gives a provable approximation guarantee of $(1+\varep
&lt;/p&gt;</description></item></channel></rss>