<rss version="2.0"><channel><title>Chat Arxiv cs.DS</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.DS</description><item><title>&#35813;&#35770;&#25991;&#25552;&#20986;&#20102;&#19968;&#31181;&#32452;&#21512;&#24335;&#28183;&#36879;&#27979;&#35797;&#31639;&#27861;&#65292;&#36890;&#36807;&#31867;&#27604;&#25293;&#21334;&#29702;&#35770;&#26694;&#26550;&#65292;&#21487;&#20197;&#23558;&#36817;&#20284;&#26368;&#20248;&#30340;&#24310;&#36831;&#25509;&#21463;&#26426;&#21046;&#36716;&#25442;&#20026;&#36817;&#20284;&#26368;&#20248;&#30340;&#28183;&#36879;&#27979;&#35797;&#31639;&#27861;&#65292;&#24182;&#19988;&#22312;&#36924;&#36817;&#31243;&#24230;&#19978;&#20445;&#35777;&#20102;&#39069;&#22806;&#24320;&#38144;&#30340;&#19978;&#38480;&#12290;</title><link>http://arxiv.org/abs/2301.12462</link><description>&lt;p&gt;
&#32452;&#21512;&#24335;&#28183;&#36879;&#27979;&#35797;&#65288;&#25110;&#32773;&#24310;&#36831;&#25509;&#21463;&#25293;&#21334;&#30340;&#28040;&#36153;&#32773;&#21097;&#20313;&#20540;&#65289;
&lt;/p&gt;
&lt;p&gt;
Combinatorial Pen Testing (or Consumer Surplus of Deferred-Acceptance Auctions). (arXiv:2301.12462v2 [cs.GT] UPDATED)
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2301.12462
&lt;/p&gt;
&lt;p&gt;
&#35813;&#35770;&#25991;&#25552;&#20986;&#20102;&#19968;&#31181;&#32452;&#21512;&#24335;&#28183;&#36879;&#27979;&#35797;&#31639;&#27861;&#65292;&#36890;&#36807;&#31867;&#27604;&#25293;&#21334;&#29702;&#35770;&#26694;&#26550;&#65292;&#21487;&#20197;&#23558;&#36817;&#20284;&#26368;&#20248;&#30340;&#24310;&#36831;&#25509;&#21463;&#26426;&#21046;&#36716;&#25442;&#20026;&#36817;&#20284;&#26368;&#20248;&#30340;&#28183;&#36879;&#27979;&#35797;&#31639;&#27861;&#65292;&#24182;&#19988;&#22312;&#36924;&#36817;&#31243;&#24230;&#19978;&#20445;&#35777;&#20102;&#39069;&#22806;&#24320;&#38144;&#30340;&#19978;&#38480;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#28183;&#36879;&#27979;&#35797;&#26159;&#24403;&#21482;&#33021;&#36890;&#36807;&#28040;&#32791;&#36164;&#28304;&#30340;&#33021;&#21147;&#26469;&#34913;&#37327;&#36164;&#28304;&#23481;&#37327;&#26102;&#65292;&#36873;&#25321;&#39640;&#23481;&#37327;&#36164;&#28304;&#30340;&#38382;&#39064;&#12290;&#25105;&#20204;&#26377;&#19968;&#32452;$n$&#21482;&#31508;&#65292;&#27599;&#21482;&#31508;&#37117;&#26377;&#26410;&#30693;&#30340;&#22696;&#27700;&#37327;&#65292;&#25105;&#20204;&#30340;&#30446;&#26631;&#26159;&#36873;&#25321;&#19968;&#20010;&#21487;&#34892;&#30340;&#31508;&#38598;&#21512;&#65292;&#20351;&#20854;&#20013;&#22696;&#27700;&#24635;&#37327;&#26368;&#22823;&#12290;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807;&#20351;&#29992;&#23427;&#20204;&#26469;&#33719;&#24471;&#26356;&#22810;&#20449;&#24687;&#65292;&#20294;&#36825;&#23558;&#28040;&#32791;&#20808;&#21069;&#23384;&#22312;&#20110;&#31508;&#20013;&#30340;&#22696;&#27700;&#12290;&#31639;&#27861;&#23558;&#19982;&#26631;&#20934;&#22522;&#20934;&#65288;&#21363;&#26368;&#20248;&#30340;&#28183;&#36879;&#27979;&#35797;&#31639;&#27861;&#65289;&#21644;&#20840;&#30693;&#22522;&#20934;&#65288;&#21363;&#22914;&#26524;&#20102;&#35299;&#31508;&#20013;&#22696;&#27700;&#30340;&#25968;&#37327;&#65292;&#21017;&#26368;&#20248;&#30340;&#36873;&#25321;&#65289;&#36827;&#34892;&#35780;&#20272;&#12290;&#25105;&#20204;&#36890;&#36807;&#23558;&#24310;&#36831;&#25509;&#21463;&#25293;&#21334;&#21644;&#34394;&#25311;&#20215;&#20540;&#30340;&#25293;&#21334;&#29702;&#35770;&#26694;&#26550;&#31867;&#27604;&#65292;&#30830;&#23450;&#20102;&#26368;&#20248;&#21644;&#36817;&#20284;&#26368;&#20248;&#30340;&#28183;&#36879;&#27979;&#35797;&#31639;&#27861;&#12290;&#25105;&#20204;&#30340;&#26694;&#26550;&#20801;&#35768;&#23558;&#20219;&#20309;&#36817;&#20284;&#26368;&#20248;&#30340;&#24310;&#36831;&#25509;&#21463;&#26426;&#21046;&#36716;&#25442;&#20026;&#36817;&#20284;&#26368;&#20248;&#30340;&#28183;&#36879;&#27979;&#35797;&#31639;&#27861;&#12290;&#27492;&#22806;&#65292;&#36825;&#20123;&#31639;&#27861;&#20445;&#35777;&#22312;&#36924;&#36817;&#31243;&#24230;&#19978;&#23384;&#22312;&#39069;&#22806;&#24320;&#38144;&#33267;&#22810;$(1+o(1)) \ln n$&#12290;
&lt;/p&gt;
&lt;p&gt;
Pen testing is the problem of selecting high-capacity resources when the only way to measure the capacity of a resource expends its capacity. We have a set of $n$ pens with unknown amounts of ink and our goal is to select a feasible subset of pens maximizing the total ink in them. We are allowed to gather more information by writing with them, but this uses up ink that was previously in the pens. Algorithms are evaluated against the standard benchmark, i.e, the optimal pen testing algorithm, and the omniscient benchmark, i.e, the optimal selection if the quantity of ink in the pens are known.  We identify optimal and near optimal pen testing algorithms by drawing analogues to auction theoretic frameworks of deferred-acceptance auctions and virtual values. Our framework allows the conversion of any near optimal deferred-acceptance mechanism into a near optimal pen testing algorithm. Moreover, these algorithms guarantee an additional overhead of at most $(1+o(1)) \ln n$ in the approximat
&lt;/p&gt;</description></item></channel></rss>