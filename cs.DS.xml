<rss version="2.0"><channel><title>Chat Arxiv cs.DS</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.DS</description><item><title>&#36890;&#36807;&#23558;&#26426;&#22120;&#23398;&#20064;&#24314;&#35758;&#19982;&#36339;&#34920;&#35774;&#35745;&#25972;&#21512;&#65292;&#25552;&#20986;&#20102;&#19968;&#31181;&#23398;&#20064;&#22686;&#24378;&#22411;&#36339;&#34920;&#65292;&#33021;&#22815;&#23454;&#29616;&#26368;&#20248;&#26399;&#26395;&#25628;&#32034;&#26102;&#38388;&#65292;&#22312;&#22788;&#29702;&#25628;&#32034;&#26597;&#35810;&#26102;&#20855;&#26377;&#26174;&#33879;&#25913;&#36827;&#12290;</title><link>https://arxiv.org/abs/2402.10457</link><description>&lt;p&gt;
&#23398;&#20064;&#22686;&#24378;&#22411;&#36339;&#34920;
&lt;/p&gt;
&lt;p&gt;
Learning-Augmented Skip Lists
&lt;/p&gt;
&lt;p&gt;
https://arxiv.org/abs/2402.10457
&lt;/p&gt;
&lt;p&gt;
&#36890;&#36807;&#23558;&#26426;&#22120;&#23398;&#20064;&#24314;&#35758;&#19982;&#36339;&#34920;&#35774;&#35745;&#25972;&#21512;&#65292;&#25552;&#20986;&#20102;&#19968;&#31181;&#23398;&#20064;&#22686;&#24378;&#22411;&#36339;&#34920;&#65292;&#33021;&#22815;&#23454;&#29616;&#26368;&#20248;&#26399;&#26395;&#25628;&#32034;&#26102;&#38388;&#65292;&#22312;&#22788;&#29702;&#25628;&#32034;&#26597;&#35810;&#26102;&#20855;&#26377;&#26174;&#33879;&#25913;&#36827;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#25105;&#20204;&#30740;&#31350;&#20102;&#23558;&#26426;&#22120;&#23398;&#20064;&#24314;&#35758;&#25972;&#21512;&#21040;&#36339;&#34920;&#35774;&#35745;&#20013;&#65292;&#20197;&#25913;&#36827;&#20256;&#32479;&#25968;&#25454;&#32467;&#26500;&#35774;&#35745;&#12290;&#36890;&#36807;&#35775;&#38382;&#21487;&#33021;&#26377;&#35823;&#30340;&#39044;&#27979;&#20998;&#25968;&#39057;&#29575;&#30340;&#39044;&#27979;&#20540;&#30340;&#39044;&#35328;&#31070;&#35861;&#65292;&#25105;&#20204;&#26500;&#24314;&#20102;&#19968;&#20010;&#36339;&#34920;&#65292;&#21487;&#20197;&#35777;&#26126;&#25552;&#20379;&#26368;&#20339;&#30340;&#26399;&#26395;&#25628;&#32034;&#26102;&#38388;&#65292;&#20960;&#20046;&#26377;&#20108;&#20493;&#30340;&#20248;&#21183;&#12290;&#20107;&#23454;&#19978;&#65292;&#25105;&#20204;&#30340;&#23398;&#20064;&#22686;&#24378;&#22411;&#36339;&#34920;&#20173;&#28982;&#26159;&#26368;&#20339;&#30340;&#65292;&#21363;&#20351;&#31070;&#35861;&#21482;&#22312;&#24120;&#25968;&#22240;&#23376;&#20869;&#20934;&#30830;&#12290;&#25105;&#20204;&#34920;&#26126;&#65292;&#22914;&#26524;&#25628;&#32034;&#26597;&#35810;&#36981;&#24490;&#26222;&#36941;&#23384;&#22312;&#30340;Zipfian&#20998;&#24067;&#65292;&#37027;&#20040;&#25105;&#20204;&#30340;&#36339;&#34920;&#23545;&#20110;&#19968;&#20010;&#39033;&#30446;&#30340;&#26399;&#26395;&#25628;&#32034;&#26102;&#38388;&#20165;&#20026;&#19968;&#20010;&#24120;&#25968;&#65292;&#19982;&#39033;&#30446;&#24635;&#25968;n&#26080;&#20851;&#65292;&#21363;O(1)&#65292;&#32780;&#20256;&#32479;&#30340;&#36339;&#34920;&#30340;&#26399;&#26395;&#25628;&#32034;&#26102;&#38388;&#20026;O(log n)&#12290;&#25105;&#20204;&#36824;&#23637;&#31034;&#20102;&#25105;&#20204;&#30340;&#25968;&#25454;&#32467;&#26500;&#30340;&#40065;&#26834;&#24615;&#65292;&#36890;&#36807;&#23637;&#31034;&#25105;&#20204;&#30340;&#25968;&#25454;&#32467;&#26500;&#23454;&#29616;&#20102;&#19968;&#20010;&#26399;&#26395;&#25628;&#32034;&#26102;&#38388;&#65292;
&lt;/p&gt;
&lt;p&gt;
arXiv:2402.10457v1 Announce Type: cross  Abstract: We study the integration of machine learning advice into the design of skip lists to improve upon traditional data structure design. Given access to a possibly erroneous oracle that outputs estimated fractional frequencies for search queries on a set of items, we construct a skip list that provably provides the optimal expected search time, within nearly a factor of two. In fact, our learning-augmented skip list is still optimal up to a constant factor, even if the oracle is only accurate within a constant factor. We show that if the search queries follow the ubiquitous Zipfian distribution, then the expected search time for an item by our skip list is only a constant, independent of the total number $n$ of items, i.e., $\mathcal{O}(1)$, whereas a traditional skip list will have an expected search time of $\mathcal{O}(\log n)$. We also demonstrate robustness by showing that our data structure achieves an expected search time that is wi
&lt;/p&gt;</description></item></channel></rss>