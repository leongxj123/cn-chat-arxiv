<rss version="2.0"><channel><title>Chat Arxiv cs.DS</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.DS</description><item><title>&#26412;&#30740;&#31350;&#25552;&#20986;&#20102;&#39318;&#20010;&#38024;&#23545;$k$-means&#21644;$k$-median&#32858;&#31867;&#30340;&#24046;&#20998;&#38544;&#31169;&#27969;&#31639;&#27861;&#65292;&#22312;&#27969;&#27169;&#22411;&#20013;&#23454;&#29616;&#23545;&#25968;&#25454;&#38544;&#31169;&#30340;&#20445;&#25252;&#65292;&#24182;&#20351;&#29992;&#23613;&#21487;&#33021;&#23569;&#30340;&#31354;&#38388;&#12290;</title><link>http://arxiv.org/abs/2307.07449</link><description>&lt;p&gt;
&#25968;&#25454;&#27969;&#20013;&#30340;&#24046;&#20998;&#38544;&#31169;&#32858;&#31867;
&lt;/p&gt;
&lt;p&gt;
Differentially Private Clustering in Data Streams. (arXiv:2307.07449v1 [cs.DS])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2307.07449
&lt;/p&gt;
&lt;p&gt;
&#26412;&#30740;&#31350;&#25552;&#20986;&#20102;&#39318;&#20010;&#38024;&#23545;$k$-means&#21644;$k$-median&#32858;&#31867;&#30340;&#24046;&#20998;&#38544;&#31169;&#27969;&#31639;&#27861;&#65292;&#22312;&#27969;&#27169;&#22411;&#20013;&#23454;&#29616;&#23545;&#25968;&#25454;&#38544;&#31169;&#30340;&#20445;&#25252;&#65292;&#24182;&#20351;&#29992;&#23613;&#21487;&#33021;&#23569;&#30340;&#31354;&#38388;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#27969;&#27169;&#22411;&#26159;&#22788;&#29702;&#22823;&#35268;&#27169;&#29616;&#20195;&#25968;&#25454;&#20998;&#26512;&#30340;&#19968;&#31181;&#24120;&#35265;&#26041;&#27861;&#12290;&#22312;&#27969;&#27169;&#22411;&#20013;&#65292;&#25968;&#25454;&#28857;&#20381;&#27425;&#27969;&#20837;&#65292;&#31639;&#27861;&#21482;&#33021;&#23545;&#25968;&#25454;&#27969;&#36827;&#34892;&#19968;&#27425;&#36941;&#21382;&#65292;&#30446;&#26631;&#26159;&#22312;&#20351;&#29992;&#23613;&#21487;&#33021;&#23569;&#30340;&#31354;&#38388;&#30340;&#21516;&#26102;&#65292;&#22312;&#27969;&#20013;&#36827;&#34892;&#19968;&#20123;&#20998;&#26512;&#12290;&#32858;&#31867;&#38382;&#39064;&#26159;&#22522;&#26412;&#30340;&#26080;&#30417;&#30563;&#26426;&#22120;&#23398;&#20064;&#21407;&#35821;&#65292;&#36807;&#21435;&#24050;&#32463;&#23545;&#27969;&#32858;&#31867;&#31639;&#27861;&#36827;&#34892;&#20102;&#24191;&#27867;&#30340;&#30740;&#31350;&#12290;&#28982;&#32780;&#65292;&#22312;&#35768;&#22810;&#23454;&#38469;&#24212;&#29992;&#20013;&#65292;&#25968;&#25454;&#38544;&#31169;&#24050;&#25104;&#20026;&#19968;&#20010;&#26680;&#24515;&#20851;&#27880;&#28857;&#65292;&#38750;&#31169;&#26377;&#32858;&#31867;&#31639;&#27861;&#22312;&#35768;&#22810;&#22330;&#26223;&#19979;&#19981;&#36866;&#29992;&#12290;&#22312;&#36825;&#39033;&#24037;&#20316;&#20013;&#65292;&#25105;&#20204;&#25552;&#20379;&#20102;&#31532;&#19968;&#20010;&#38024;&#23545;$k$-means&#21644;$k$-median&#32858;&#31867;&#30340;&#24046;&#20998;&#31169;&#26377;&#27969;&#31639;&#27861;&#65292;&#35813;&#31639;&#27861;&#22312;&#38271;&#24230;&#26368;&#22810;&#20026;$T$&#30340;&#27969;&#19978;&#20351;&#29992;$poly(k,d,\log(T))$&#30340;&#31354;&#38388;&#26469;&#23454;&#29616;&#19968;&#20010;&#8220;&#24120;&#25968;&#8221;&#12290;
&lt;/p&gt;
&lt;p&gt;
The streaming model is an abstraction of computing over massive data streams, which is a popular way of dealing with large-scale modern data analysis. In this model, there is a stream of data points, one after the other. A streaming algorithm is only allowed one pass over the data stream, and the goal is to perform some analysis during the stream while using as small space as possible.  Clustering problems (such as $k$-means and $k$-median) are fundamental unsupervised machine learning primitives, and streaming clustering algorithms have been extensively studied in the past. However, since data privacy becomes a central concern in many real-world applications, non-private clustering algorithms are not applicable in many scenarios.  In this work, we provide the first differentially private streaming algorithms for $k$-means and $k$-median clustering of $d$-dimensional Euclidean data points over a stream with length at most $T$ using $poly(k,d,\log(T))$ space to achieve a {\it constant} 
&lt;/p&gt;</description></item></channel></rss>