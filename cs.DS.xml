<rss version="2.0"><channel><title>Chat Arxiv cs.DS</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for cs.DS</description><item><title>&#26412;&#25991;&#20171;&#32461;&#20102;&#19968;&#31181;&#24102;&#26377;&#25130;&#27490;&#26399;&#38480;&#23454;&#20363;&#30340;&#24555;&#36895;&#39640;&#25928;&#21305;&#37197;&#31639;&#27861;&#65292;&#36890;&#36807;&#24341;&#20837;&#24102;&#26377;&#25130;&#27490;&#26399;&#38480;&#30340;&#24066;&#22330;&#27169;&#22411;&#65292;&#25552;&#20986;&#20102;&#20004;&#31181;&#20248;&#21270;&#31639;&#27861;&#65288;FastGreedy&#21644;FastPostponedGreedy&#65289;&#12290;&#35813;&#31639;&#27861;&#22312;&#22788;&#29702;&#26426;&#22120;&#23398;&#20064;&#20013;&#30340;&#22312;&#32447;&#21152;&#26435;&#21305;&#37197;&#38382;&#39064;&#26102;&#20855;&#26377;&#36739;&#24555;&#30340;&#36895;&#24230;&#21644;&#20934;&#30830;&#24615;&#12290;</title><link>https://arxiv.org/abs/2305.08353</link><description>&lt;p&gt;
&#24555;&#36895;&#39640;&#25928;&#30340;&#24102;&#26377;&#25130;&#27490;&#26399;&#38480;&#23454;&#20363;&#30340;&#21305;&#37197;&#31639;&#27861;
&lt;/p&gt;
&lt;p&gt;
Fast and Efficient Matching Algorithm with Deadline Instances
&lt;/p&gt;
&lt;p&gt;
https://arxiv.org/abs/2305.08353
&lt;/p&gt;
&lt;p&gt;
&#26412;&#25991;&#20171;&#32461;&#20102;&#19968;&#31181;&#24102;&#26377;&#25130;&#27490;&#26399;&#38480;&#23454;&#20363;&#30340;&#24555;&#36895;&#39640;&#25928;&#21305;&#37197;&#31639;&#27861;&#65292;&#36890;&#36807;&#24341;&#20837;&#24102;&#26377;&#25130;&#27490;&#26399;&#38480;&#30340;&#24066;&#22330;&#27169;&#22411;&#65292;&#25552;&#20986;&#20102;&#20004;&#31181;&#20248;&#21270;&#31639;&#27861;&#65288;FastGreedy&#21644;FastPostponedGreedy&#65289;&#12290;&#35813;&#31639;&#27861;&#22312;&#22788;&#29702;&#26426;&#22120;&#23398;&#20064;&#20013;&#30340;&#22312;&#32447;&#21152;&#26435;&#21305;&#37197;&#38382;&#39064;&#26102;&#20855;&#26377;&#36739;&#24555;&#30340;&#36895;&#24230;&#21644;&#20934;&#30830;&#24615;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#22312;&#26426;&#22120;&#23398;&#20064;&#20013;&#65292;&#22312;&#32447;&#21152;&#26435;&#21305;&#37197;&#38382;&#39064;&#30001;&#20110;&#20854;&#20247;&#22810;&#24212;&#29992;&#32780;&#25104;&#20026;&#19968;&#20010;&#22522;&#26412;&#38382;&#39064;&#12290;&#23613;&#31649;&#22312;&#36825;&#20010;&#39046;&#22495;&#24050;&#32463;&#20570;&#20102;&#24456;&#22810;&#21162;&#21147;&#65292;&#20294;&#29616;&#26377;&#30340;&#31639;&#27861;&#35201;&#20040;&#36895;&#24230;&#22826;&#24930;&#65292;&#35201;&#20040;&#27809;&#26377;&#32771;&#34385;&#21040;&#25130;&#27490;&#26399;&#38480;&#65288;&#33410;&#28857;&#21487;&#20197;&#21305;&#37197;&#30340;&#26368;&#38271;&#26102;&#38388;&#65289;&#12290;&#22312;&#26412;&#25991;&#20013;&#65292;&#25105;&#20204;&#39318;&#20808;&#24341;&#20837;&#20102;&#19968;&#20010;&#24102;&#26377;&#25130;&#27490;&#26399;&#38480;&#30340;&#24066;&#22330;&#27169;&#22411;&#12290;&#25509;&#19979;&#26469;&#65292;&#25105;&#20204;&#25552;&#20986;&#20102;&#20004;&#20010;&#20248;&#21270;&#31639;&#27861;&#65288;FastGreedy&#21644;FastPostponedGreedy&#65289;&#65292;&#24182;&#32473;&#20986;&#20102;&#20851;&#20110;&#31639;&#27861;&#26102;&#38388;&#22797;&#26434;&#24230;&#21644;&#27491;&#30830;&#24615;&#30340;&#29702;&#35770;&#35777;&#26126;&#12290;&#22312;FastGreedy&#31639;&#27861;&#20013;&#65292;&#25105;&#20204;&#24050;&#32463;&#30693;&#36947;&#19968;&#20010;&#33410;&#28857;&#26159;&#20080;&#23478;&#36824;&#26159;&#21334;&#23478;&#12290;&#20294;&#22312;FastPostponedGreedy&#31639;&#27861;&#20013;&#65292;&#19968;&#24320;&#22987;&#25105;&#20204;&#19981;&#30693;&#36947;&#27599;&#20010;&#33410;&#28857;&#30340;&#29366;&#24577;&#12290;&#28982;&#21518;&#65292;&#25105;&#20204;&#25512;&#24191;&#20102;&#19968;&#20010;&#33609;&#22270;&#30697;&#38453;&#65292;&#20197;&#22312;&#30495;&#23454;&#25968;&#25454;&#38598;&#21644;&#21512;&#25104;&#25968;&#25454;&#38598;&#19978;&#36816;&#34892;&#21407;&#22987;&#31639;&#27861;&#21644;&#25105;&#20204;&#30340;&#31639;&#27861;&#12290;&#35774; &#949; &#8712;&#65288;0,0.1&#65289;&#34920;&#31034;&#27599;&#26465;&#36793;&#30340;&#30495;&#23454;&#26435;&#37325;&#30340;&#30456;&#23545;&#35823;&#24046;&#12290;&#21407;&#22987;&#30340;Greedy&#21644;Po&#31639;&#27861;&#30340;&#31454;&#20105;&#27604;&#29575;&#26159;&#22810;&#23569;&#12290;
&lt;/p&gt;
&lt;p&gt;
The online weighted matching problem is a fundamental problem in machine learning due to its numerous applications. Despite many efforts in this area, existing algorithms are either too slow or don't take $\mathrm{deadline}$ (the longest time a node can be matched) into account. In this paper, we introduce a market model with $\mathrm{deadline}$ first. Next, we present our two optimized algorithms (\textsc{FastGreedy} and \textsc{FastPostponedGreedy}) and offer theoretical proof of the time complexity and correctness of our algorithms. In \textsc{FastGreedy} algorithm, we have already known if a node is a buyer or a seller. But in \textsc{FastPostponedGreedy} algorithm, the status of each node is unknown at first. Then, we generalize a sketching matrix to run the original and our algorithms on both real data sets and synthetic data sets. Let $\epsilon \in (0,0.1)$ denote the relative error of the real weight of each edge. The competitive ratio of original \textsc{Greedy} and \textsc{Po
&lt;/p&gt;</description></item></channel></rss>