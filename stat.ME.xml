<rss version="2.0"><channel><title>Chat Arxiv stat.ME</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for stat.ME</description><item><title>&#25552;&#20986;&#20102;&#19968;&#31181;&#33258;&#21160;&#24322;&#24120;&#20540;&#30699;&#27491;&#26426;&#21046;&#65292;&#36890;&#36807;&#23558;&#30699;&#27491;&#21644;&#20272;&#35745;&#38598;&#25104;&#21040;&#32852;&#21512;&#20248;&#21270;&#26694;&#26550;&#20013;&#65292;&#21033;&#29992;&#26368;&#20248;&#36755;&#36816;&#21644;&#20985;&#25104;&#26412;&#20989;&#25968;&#26469;&#26816;&#27979;&#21644;&#31227;&#38500;&#24322;&#24120;&#20540;&#65292;&#24182;&#36873;&#25321;&#26368;&#20339;&#20998;&#24067;&#26469;&#25191;&#34892;&#20272;&#35745;&#20219;&#21153;</title><link>https://arxiv.org/abs/2403.14067</link><description>&lt;p&gt;
&#36890;&#36807;&#26368;&#20248;&#36755;&#36816;&#30340;&#33258;&#21160;&#24322;&#24120;&#20540;&#30699;&#27491;
&lt;/p&gt;
&lt;p&gt;
Automatic Outlier Rectification via Optimal Transport
&lt;/p&gt;
&lt;p&gt;
https://arxiv.org/abs/2403.14067
&lt;/p&gt;
&lt;p&gt;
&#25552;&#20986;&#20102;&#19968;&#31181;&#33258;&#21160;&#24322;&#24120;&#20540;&#30699;&#27491;&#26426;&#21046;&#65292;&#36890;&#36807;&#23558;&#30699;&#27491;&#21644;&#20272;&#35745;&#38598;&#25104;&#21040;&#32852;&#21512;&#20248;&#21270;&#26694;&#26550;&#20013;&#65292;&#21033;&#29992;&#26368;&#20248;&#36755;&#36816;&#21644;&#20985;&#25104;&#26412;&#20989;&#25968;&#26469;&#26816;&#27979;&#21644;&#31227;&#38500;&#24322;&#24120;&#20540;&#65292;&#24182;&#36873;&#25321;&#26368;&#20339;&#20998;&#24067;&#26469;&#25191;&#34892;&#20272;&#35745;&#20219;&#21153;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#22312;&#26412;&#25991;&#20013;&#65292;&#25105;&#20204;&#25552;&#20986;&#20102;&#19968;&#20010;&#26032;&#39062;&#30340;&#27010;&#24565;&#26694;&#26550;&#65292;&#20351;&#29992;&#20855;&#26377;&#20985;&#25104;&#26412;&#20989;&#25968;&#30340;&#26368;&#20248;&#36755;&#36816;&#26469;&#26816;&#27979;&#24322;&#24120;&#20540;&#12290;&#20256;&#32479;&#30340;&#24322;&#24120;&#20540;&#26816;&#27979;&#26041;&#27861;&#36890;&#24120;&#20351;&#29992;&#20004;&#38454;&#27573;&#27969;&#31243;&#65306;&#39318;&#20808;&#26816;&#27979;&#24182;&#31227;&#38500;&#24322;&#24120;&#20540;&#65292;&#28982;&#21518;&#22312;&#28165;&#27905;&#25968;&#25454;&#19978;&#25191;&#34892;&#20272;&#35745;&#12290;&#28982;&#32780;&#65292;&#36825;&#31181;&#26041;&#27861;&#24182;&#27809;&#26377;&#23558;&#24322;&#24120;&#20540;&#31227;&#38500;&#19982;&#20272;&#35745;&#20219;&#21153;&#32852;&#31995;&#36215;&#26469;&#65292;&#30041;&#19979;&#20102;&#25913;&#36827;&#30340;&#31354;&#38388;&#12290;&#20026;&#20102;&#35299;&#20915;&#36825;&#19968;&#23616;&#38480;&#24615;&#65292;&#25105;&#20204;&#25552;&#20986;&#20102;&#19968;&#31181;&#33258;&#21160;&#24322;&#24120;&#20540;&#30699;&#27491;&#26426;&#21046;&#65292;&#23558;&#30699;&#27491;&#21644;&#20272;&#35745;&#38598;&#25104;&#21040;&#19968;&#20010;&#32852;&#21512;&#20248;&#21270;&#26694;&#26550;&#20013;&#12290;&#25105;&#20204;&#39318;&#20808;&#21033;&#29992;&#20855;&#26377;&#20985;&#25104;&#26412;&#20989;&#25968;&#30340;&#26368;&#20248;&#36755;&#36816;&#36317;&#31163;&#26469;&#26500;&#24314;&#27010;&#29575;&#20998;&#24067;&#31354;&#38388;&#20013;&#30340;&#30699;&#27491;&#38598;&#21512;&#12290;&#28982;&#21518;&#65292;&#25105;&#20204;&#36873;&#25321;&#22312;&#30699;&#27491;&#38598;&#21512;&#20013;&#30340;&#26368;&#20339;&#20998;&#24067;&#26469;&#25191;&#34892;&#20272;&#35745;&#20219;&#21153;&#12290;&#20540;&#24471;&#27880;&#24847;&#30340;&#26159;&#65292;&#25105;&#20204;&#22312;&#26412;&#25991;&#20013;&#24341;&#20837;&#30340;&#20985;&#25104;&#26412;&#20989;&#25968;&#26159;&#20351;&#25105;&#20204;&#30340;&#20272;&#35745;&#22120;&#20855;&#26377;&#20851;&#38190;&#24615;&#30340;&#22240;&#32032;&#12290;
&lt;/p&gt;
&lt;p&gt;
arXiv:2403.14067v1 Announce Type: cross  Abstract: In this paper, we propose a novel conceptual framework to detect outliers using optimal transport with a concave cost function. Conventional outlier detection approaches typically use a two-stage procedure: first, outliers are detected and removed, and then estimation is performed on the cleaned data. However, this approach does not inform outlier removal with the estimation task, leaving room for improvement. To address this limitation, we propose an automatic outlier rectification mechanism that integrates rectification and estimation within a joint optimization framework. We take the first step to utilize an optimal transport distance with a concave cost function to construct a rectification set in the space of probability distributions. Then, we select the best distribution within the rectification set to perform the estimation task. Notably, the concave cost function we introduced in this paper is the key to making our estimator e
&lt;/p&gt;</description></item><item><title>gadjid&#36719;&#20214;&#21253;&#25552;&#20379;&#20102;&#19968;&#31181;&#29992;&#20110;&#22240;&#26524;&#32467;&#26500;&#23398;&#20064;&#30340;&#35843;&#25972;&#35782;&#21035;&#36317;&#31163;&#65292;&#36890;&#36807;&#24341;&#20837;&#26694;&#26550;&#26469;&#35745;&#31639;&#22240;&#26524;&#36317;&#31163;&#65292;&#36825;&#20123;&#36317;&#31163;&#33021;&#22815;&#39640;&#25928;&#35780;&#20272;&#22240;&#26524;&#21457;&#29616;&#31639;&#27861;&#23398;&#20064;&#30340;&#22270;&#24418;&#65292;&#24182;&#19988;&#22312;&#22788;&#29702;&#22823;&#35268;&#27169;&#22270;&#24418;&#26102;&#20855;&#26377;&#36739;&#39640;&#30340;&#24615;&#33021;&#12290;</title><link>https://arxiv.org/abs/2402.08616</link><description>&lt;p&gt;
Adjustment Identification Distance: &#19968;&#31181;&#29992;&#20110;&#22240;&#26524;&#32467;&#26500;&#23398;&#20064;&#30340;&#35843;&#25972;&#35782;&#21035;&#36317;&#31163;
&lt;/p&gt;
&lt;p&gt;
Adjustment Identification Distance: A gadjid for Causal Structure Learning
&lt;/p&gt;
&lt;p&gt;
https://arxiv.org/abs/2402.08616
&lt;/p&gt;
&lt;p&gt;
gadjid&#36719;&#20214;&#21253;&#25552;&#20379;&#20102;&#19968;&#31181;&#29992;&#20110;&#22240;&#26524;&#32467;&#26500;&#23398;&#20064;&#30340;&#35843;&#25972;&#35782;&#21035;&#36317;&#31163;&#65292;&#36890;&#36807;&#24341;&#20837;&#26694;&#26550;&#26469;&#35745;&#31639;&#22240;&#26524;&#36317;&#31163;&#65292;&#36825;&#20123;&#36317;&#31163;&#33021;&#22815;&#39640;&#25928;&#35780;&#20272;&#22240;&#26524;&#21457;&#29616;&#31639;&#27861;&#23398;&#20064;&#30340;&#22270;&#24418;&#65292;&#24182;&#19988;&#22312;&#22788;&#29702;&#22823;&#35268;&#27169;&#22270;&#24418;&#26102;&#20855;&#26377;&#36739;&#39640;&#30340;&#24615;&#33021;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#36890;&#36807;&#22240;&#26524;&#21457;&#29616;&#31639;&#27861;&#23398;&#20064;&#30340;&#22270;&#24418;&#30340;&#35780;&#20272;&#26159;&#22256;&#38590;&#30340;&#65306;&#20004;&#20010;&#22270;&#24418;&#20043;&#38388;&#19981;&#21516;&#30340;&#36793;&#30340;&#25968;&#37327;&#19981;&#33021;&#21453;&#26144;&#20986;&#23427;&#20204;&#22312;&#24314;&#35758;&#22240;&#26524;&#25928;&#24212;&#30340;&#35782;&#21035;&#20844;&#24335;&#26041;&#38754;&#26377;&#20309;&#19981;&#21516;&#12290;&#25105;&#20204;&#24341;&#20837;&#20102;&#19968;&#20010;&#26694;&#26550;&#65292;&#29992;&#20110;&#24320;&#21457;&#22270;&#24418;&#20043;&#38388;&#30340;&#22240;&#26524;&#36317;&#31163;&#65292;&#20854;&#20013;&#21253;&#25324;&#26377;&#21521;&#26080;&#29615;&#22270;&#30340;&#32467;&#26500;&#24178;&#39044;&#36317;&#31163;&#20316;&#20026;&#19968;&#31181;&#29305;&#27530;&#24773;&#20917;&#12290;&#25105;&#20204;&#21033;&#29992;&#36825;&#20010;&#26694;&#26550;&#24320;&#21457;&#20102;&#25913;&#36827;&#30340;&#22522;&#20110;&#35843;&#25972;&#30340;&#36317;&#31163;&#65292;&#20197;&#21450;&#23545;&#23436;&#25104;&#30340;&#37096;&#20998;&#26377;&#21521;&#26080;&#29615;&#22270;&#21644;&#22240;&#26524;&#24207;&#21015;&#30340;&#25193;&#23637;&#12290;&#25105;&#20204;&#24320;&#21457;&#20102;&#22810;&#39033;&#24335;&#26102;&#38388;&#21487;&#36798;&#24615;&#31639;&#27861;&#26469;&#39640;&#25928;&#35745;&#31639;&#36317;&#31163;&#12290;&#22312;&#25105;&#20204;&#30340;gadjid&#36719;&#20214;&#21253;&#20013;&#65288;&#22312;https://github.com/CausalDisco/gadjid&#19978;&#24320;&#28304;&#65289;&#65292;&#25105;&#20204;&#25552;&#20379;&#20102;&#25105;&#20204;&#30340;&#36317;&#31163;&#23454;&#29616;&#65307;&#23427;&#20204;&#30340;&#36816;&#34892;&#36895;&#24230;&#27604;&#32467;&#26500;&#24178;&#39044;&#36317;&#31163;&#24555;&#20960;&#20010;&#25968;&#37327;&#32423;&#65292;&#20174;&#32780;&#20026;&#20197;&#21069;&#26080;&#27861;&#25193;&#23637;&#30340;&#22270;&#24418;&#23610;&#23544;&#25552;&#20379;&#20102;&#19968;&#20010;&#22240;&#26524;&#21457;&#29616;&#30340;&#25104;&#21151;&#25351;&#26631;&#12290;
&lt;/p&gt;
&lt;p&gt;
Evaluating graphs learned by causal discovery algorithms is difficult: The number of edges that differ between two graphs does not reflect how the graphs differ with respect to the identifying formulas they suggest for causal effects. We introduce a framework for developing causal distances between graphs which includes the structural intervention distance for directed acyclic graphs as a special case. We use this framework to develop improved adjustment-based distances as well as extensions to completed partially directed acyclic graphs and causal orders. We develop polynomial-time reachability algorithms to compute the distances efficiently. In our package gadjid (open source at https://github.com/CausalDisco/gadjid), we provide implementations of our distances; they are orders of magnitude faster than the structural intervention distance and thereby provide a success metric for causal discovery that scales to graph sizes that were previously prohibitive.
&lt;/p&gt;</description></item></channel></rss>