<rss version="2.0"><channel><title>Chat Arxiv stat.ME</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for stat.ME</description><item><title>&#19968;&#31867;&#36793;&#30028;&#21093;&#31163;&#26159;&#19968;&#31181;&#26080;&#30417;&#30563;&#30340;&#24322;&#24120;&#26816;&#27979;&#31639;&#27861;&#65292;&#20351;&#29992;&#20102;&#24179;&#22343;&#26377;&#31526;&#21495;&#36317;&#31163;&#21644;&#28789;&#27963;&#30340;&#36793;&#30028;&#29983;&#25104;&#26041;&#27861;&#12290;&#22312;&#26080;&#24322;&#24120;&#20540;&#21644;&#26377;&#24322;&#24120;&#20540;&#30340;&#24773;&#20917;&#19979;&#65292;&#19968;&#31867;&#36793;&#30028;&#21093;&#31163;&#34920;&#29616;&#20986;&#20248;&#36234;&#30340;&#24615;&#33021;&#12290;</title><link>http://arxiv.org/abs/2309.05630</link><description>&lt;p&gt;
&#36793;&#30028;&#21093;&#31163;&#65306;&#20351;&#29992;&#19968;&#31867;&#21093;&#31163;&#30340;&#24322;&#24120;&#26816;&#27979;&#26041;&#27861;
&lt;/p&gt;
&lt;p&gt;
Boundary Peeling: Outlier Detection Method Using One-Class Peeling. (arXiv:2309.05630v1 [stat.ML])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2309.05630
&lt;/p&gt;
&lt;p&gt;
&#19968;&#31867;&#36793;&#30028;&#21093;&#31163;&#26159;&#19968;&#31181;&#26080;&#30417;&#30563;&#30340;&#24322;&#24120;&#26816;&#27979;&#31639;&#27861;&#65292;&#20351;&#29992;&#20102;&#24179;&#22343;&#26377;&#31526;&#21495;&#36317;&#31163;&#21644;&#28789;&#27963;&#30340;&#36793;&#30028;&#29983;&#25104;&#26041;&#27861;&#12290;&#22312;&#26080;&#24322;&#24120;&#20540;&#21644;&#26377;&#24322;&#24120;&#20540;&#30340;&#24773;&#20917;&#19979;&#65292;&#19968;&#31867;&#36793;&#30028;&#21093;&#31163;&#34920;&#29616;&#20986;&#20248;&#36234;&#30340;&#24615;&#33021;&#12290;
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#26080;&#30417;&#30563;&#24322;&#24120;&#26816;&#27979;&#22312;&#25968;&#25454;&#20998;&#26512;&#20013;&#26159;&#33267;&#20851;&#37325;&#35201;&#30340;&#38454;&#27573;&#65292;&#20173;&#28982;&#26159;&#19968;&#20010;&#20805;&#28385;&#27963;&#21147;&#30340;&#30740;&#31350;&#39046;&#22495;&#12290;&#19968;&#20010;&#22909;&#30340;&#24322;&#24120;&#26816;&#27979;&#31639;&#27861;&#24212;&#35813;&#20855;&#22791;&#35745;&#31639;&#25928;&#29575;&#39640;&#12289;&#23545;&#35843;&#21442;&#36873;&#25321;&#40065;&#26834;&#12289;&#22312;&#19981;&#21516;&#30340;&#25968;&#25454;&#20998;&#24067;&#19979;&#34920;&#29616;&#31283;&#23450;&#31561;&#29305;&#28857;&#12290;&#25105;&#20204;&#20171;&#32461;&#20102;&#19968;&#31867;&#36793;&#30028;&#21093;&#31163;&#65292;&#19968;&#31181;&#26080;&#30417;&#30563;&#24322;&#24120;&#26816;&#27979;&#31639;&#27861;&#12290;&#19968;&#31867;&#36793;&#30028;&#21093;&#31163;&#20351;&#29992;&#20102;&#19968;&#31867;&#25903;&#25345;&#21521;&#37327;&#26426;&#19981;&#26029;&#21093;&#31163;&#30340;&#12289;&#28789;&#27963;&#30340;&#36793;&#30028;&#29983;&#25104;&#30340;&#24179;&#22343;&#26377;&#31526;&#21495;&#36317;&#31163;&#12290;&#19968;&#31867;&#36793;&#30028;&#21093;&#31163;&#20855;&#26377;&#40065;&#26834;&#30340;&#36229;&#21442;&#25968;&#35774;&#32622;&#65292;&#24182;&#19988;&#20026;&#20102;&#22686;&#21152;&#28789;&#27963;&#24615;&#65292;&#21487;&#20197;&#34987;&#30475;&#20316;&#26159;&#19968;&#20010;&#38598;&#25104;&#26041;&#27861;&#12290;&#22312;&#21512;&#25104;&#25968;&#25454;&#27169;&#25311;&#20013;&#65292;&#19968;&#31867;&#36793;&#30028;&#21093;&#31163;&#22312;&#27809;&#26377;&#24322;&#24120;&#20540;&#30340;&#24773;&#20917;&#19979;&#20248;&#20110;&#25152;&#26377;&#20808;&#36827;&#26041;&#27861;&#65292;&#24182;&#19988;&#22312;&#26377;&#24322;&#24120;&#20540;&#23384;&#22312;&#30340;&#24773;&#20917;&#19979;&#65292;&#19982;&#22522;&#20934;&#26041;&#27861;&#30456;&#27604;&#65292;&#22312;&#27491;&#30830;&#20998;&#31867;&#26041;&#38754;&#34920;&#29616;&#20986;&#21487;&#27604;&#25110;&#26356;&#22909;&#30340;&#24615;&#33021;&#12290;
&lt;/p&gt;
&lt;p&gt;
Unsupervised outlier detection constitutes a crucial phase within data analysis and remains a dynamic realm of research. A good outlier detection algorithm should be computationally efficient, robust to tuning parameter selection, and perform consistently well across diverse underlying data distributions. We introduce One-Class Boundary Peeling, an unsupervised outlier detection algorithm. One-class Boundary Peeling uses the average signed distance from iteratively-peeled, flexible boundaries generated by one-class support vector machines. One-class Boundary Peeling has robust hyperparameter settings and, for increased flexibility, can be cast as an ensemble method. In synthetic data simulations One-Class Boundary Peeling outperforms all state of the art methods when no outliers are present while maintaining comparable or superior performance in the presence of outliers, as compared to benchmark methods. One-Class Boundary Peeling performs competitively in terms of correct classificati
&lt;/p&gt;</description></item></channel></rss>