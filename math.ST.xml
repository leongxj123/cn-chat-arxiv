<rss version="2.0"><channel><title>Chat Arxiv math.ST</title><link>https://github.com/qhduan/cn-chat-arxiv</link><description>This is arxiv RSS feed for math.ST</description><item><title>&#26412;&#25991;&#25552;&#20986;&#20102;&#19968;&#31181;&#31616;&#21333;&#30340;&#31639;&#27861;&#65292;&#21363;&#20351;&#22312;&#23384;&#22312;&#23545;&#25239;&#24615;&#30340;&#24322;&#24120;&#20540;&#30340;&#24773;&#20917;&#19979;&#65292;&#20063;&#33021;&#33719;&#24471;&#26368;&#20248;&#30340;&#38169;&#26631;&#29575;&#12290;&#22312;&#27809;&#26377;&#24322;&#24120;&#20540;&#30340;&#24773;&#20917;&#19979;&#65292;&#35813;&#31639;&#27861;&#33021;&#22815;&#23454;&#29616;&#19982;&#27931;&#20234;&#24503;&#31639;&#27861;&#31867;&#20284;&#30340;&#29702;&#35770;&#20445;&#35777;.</title><link>http://arxiv.org/abs/2306.09977</link><description>&lt;p&gt;
&#24102;&#26377;&#26368;&#20248;&#24615;&#20445;&#35777;&#30340;&#23545;&#25239;&#40065;&#26834;&#32858;&#31867;
&lt;/p&gt;
&lt;p&gt;
Adversarially robust clustering with optimality guarantees. (arXiv:2306.09977v1 [math.ST])
&lt;/p&gt;
&lt;p&gt;
http://arxiv.org/abs/2306.09977
&lt;/p&gt;
&lt;p&gt;
&#26412;&#25991;&#25552;&#20986;&#20102;&#19968;&#31181;&#31616;&#21333;&#30340;&#31639;&#27861;&#65292;&#21363;&#20351;&#22312;&#23384;&#22312;&#23545;&#25239;&#24615;&#30340;&#24322;&#24120;&#20540;&#30340;&#24773;&#20917;&#19979;&#65292;&#20063;&#33021;&#33719;&#24471;&#26368;&#20248;&#30340;&#38169;&#26631;&#29575;&#12290;&#22312;&#27809;&#26377;&#24322;&#24120;&#20540;&#30340;&#24773;&#20917;&#19979;&#65292;&#35813;&#31639;&#27861;&#33021;&#22815;&#23454;&#29616;&#19982;&#27931;&#20234;&#24503;&#31639;&#27861;&#31867;&#20284;&#30340;&#29702;&#35770;&#20445;&#35777;.
&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;p&gt;
&#25105;&#20204;&#32771;&#34385;&#23545;&#26469;&#33258;&#20122;&#39640;&#26031;&#28151;&#21512;&#30340;&#25968;&#25454;&#28857;&#36827;&#34892;&#32858;&#31867;&#30340;&#38382;&#39064;&#12290;&#29616;&#26377;&#30340;&#21487;&#35777;&#26126;&#36798;&#21040;&#26368;&#20248;&#38169;&#26631;&#29575;&#30340;&#26041;&#27861;&#65292;&#22914;&#27931;&#20234;&#24503;&#31639;&#27861;&#65292;&#36890;&#24120;&#23481;&#26131;&#21463;&#21040;&#24322;&#24120;&#20540;&#30340;&#24433;&#21709;&#12290;&#30456;&#21453;&#65292;&#20284;&#20046;&#23545;&#23545;&#25239;&#24615;&#25200;&#21160;&#20855;&#26377;&#40065;&#26834;&#24615;&#30340;&#32858;&#31867;&#26041;&#27861;&#19981;&#30693;&#36947;&#26159;&#21542;&#28385;&#36275;&#26368;&#20248;&#30340;&#32479;&#35745;&#20445;&#35777;&#12290;&#25105;&#20204;&#25552;&#20986;&#20102;&#19968;&#31181;&#31616;&#21333;&#30340;&#31639;&#27861;&#65292;&#21363;&#20351;&#20801;&#35768;&#20986;&#29616;&#23545;&#25239;&#24615;&#30340;&#24322;&#24120;&#20540;&#65292;&#20063;&#33021;&#33719;&#24471;&#26368;&#20248;&#30340;&#38169;&#26631;&#29575;&#12290;&#24403;&#28385;&#36275;&#24369;&#21021;&#22987;&#21270;&#26465;&#20214;&#26102;&#65292;&#25105;&#20204;&#30340;&#31639;&#27861;&#22312;&#24120;&#25968;&#27425;&#36845;&#20195;&#20013;&#23454;&#29616;&#26368;&#20248;&#35823;&#24046;&#29575;&#12290;&#22312;&#27809;&#26377;&#24322;&#24120;&#20540;&#30340;&#24773;&#20917;&#19979;&#65292;&#22312;&#22266;&#23450;&#32500;&#24230;&#19978;&#65292;&#25105;&#20204;&#30340;&#29702;&#35770;&#20445;&#35777;&#19982;&#27931;&#20234;&#24503;&#31639;&#27861;&#31867;&#20284;&#12290;&#22312;&#21508;&#31181;&#27169;&#25311;&#25968;&#25454;&#38598;&#19978;&#36827;&#34892;&#20102;&#24191;&#27867;&#30340;&#23454;&#39564;&#65292;&#20197;&#25903;&#25345;&#25105;&#20204;&#30340;&#26041;&#27861;&#30340;&#29702;&#35770;&#20445;&#35777;&#12290;
&lt;/p&gt;
&lt;p&gt;
We consider the problem of clustering data points coming from sub-Gaussian mixtures. Existing methods that provably achieve the optimal mislabeling error, such as the Lloyd algorithm, are usually vulnerable to outliers. In contrast, clustering methods seemingly robust to adversarial perturbations are not known to satisfy the optimal statistical guarantees. We propose a simple algorithm that obtains the optimal mislabeling rate even when we allow adversarial outliers to be present. Our algorithm achieves the optimal error rate in constant iterations when a weak initialization condition is satisfied. In the absence of outliers, in fixed dimensions, our theoretical guarantees are similar to that of the Lloyd algorithm. Extensive experiments on various simulated data sets are conducted to support the theoretical guarantees of our method.
&lt;/p&gt;</description></item></channel></rss>